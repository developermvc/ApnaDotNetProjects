@model LumaxDMS.Models.DsrhdrdtlModel
@using LumaxDMS.AppCode
@{
    ViewBag.Title = "DSR Itemwise Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
    int i = 0;

}
<style>
    .form-control{margin-bottom:10px!important;}
</style>


<div class="card card-default">
    <div class="card-header card_bg">
        <div class="card-title card_tittle2">DSR ITEM DETAILS</div>
    </div>

    @using (@Html.BeginForm("DSRApprovalDetail", "DSR", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal" }))
    {
    <div class="card-body">
        <div class="row">
            <div class="col-lg-2">
                <label for="pwd">PLAN  DATE :</label>
            </div>
            @Html.HiddenFor(m=>m.from)
            <div class="col-lg-2">
                
                @Html.TextBoxFor(m => m.plandate, new { @class = "form-control from_bg from_bg2", @placeholder = "Plan Date", @readonly = "true" })

            </div>
            <div class="col-lg-2">
                <label for="pwd">
                    Day type :
                </label>
            </div>
            <div class="col-lg-2">
                @Html.DropDownListFor(m => m.SelectedDaytype_id, new SelectList(Model.daytypeMasterList, "DAYTYPE_ID", "DAYTYPENAME"), "--Select Day type--", new { @class = "form-control", @readonly = "true",@disabled="true" })

            </div>
            <div class="col-lg-2">
                <label for="pwd">
                    PLANCODE :
                </label>
            </div>
            <div class="col-lg-2">
                @Html.TextBoxFor(m => m.Plancode, new { @class = "form-control from_bg from_bg2", @placeholder = "Plan No", @readonly = "true" })

            </div>
        </div>
        
        @if (Model.dsrdetailMasterList != null)
        {
            foreach (var item in Model.dsrdetailMasterList)
            {
                i = i + 1;
                <input type="hidden" id="planmid" name="planmid" value="@item.DTLPLAN_ID" />
                <div class="row">
                    <div class="col-lg-2">
                        <label for="pwd">City :</label>
                    </div>
                    <div class="col-lg-2">
                        @Html.DropDownListFor(m => item.CITYID, new SelectList(Model.cityMasterList, "CITY_ID", "CITYNAME", item.CITYID), "--Select City--", new { @class = "form-control select-chosen", @Id = "Selectedcity_id_" + i, @Name = "Selectedcity_id_" + i, @readonly = "true", @disabled = "true" })

                    </div>
                    <div class="col-lg-2">
                        <label for="pwd">
                            Customer Type :
                        </label>
                    </div>
                    <div class="col-lg-2">
                        @Html.DropDownListFor(m => item.PROSPECTTYPEID, new SelectList(Model.prospectTypeMasterList, "PROSPECTTYPE_ID", "PROSPECTTYPENAME", item.PROSPECTTYPEID), "--Select Customer Type--", new { @class = "form-control select-chosen", @Id = "Selectedcustomer_id_" + i, @Name = "Selectedcustomer_id_" + i, @readonly = "true", @disabled = "true"  })
                    </div>
                    <div class="col-lg-2">
                        <label for="pwd">
                            CONTACT PERSON :
                        </label>
                    </div>
                    <div class="col-lg-2">
                        @Html.TextBoxFor(m => item.CONTACTPERSON, new { @class = "form-control from_bg", title = "Enter Contact Person", @Id = "contperson_" + i, @Name = "contperson_" + i, @readonly = "true" })

                    </div>
                </div>
               
                <div class="row">
                    <div class="col-lg-2">
                        <label for="pwd">CONTACT NUMBER :</label>
                    </div>
                    <div class="col-lg-2">
                        @Html.TextBoxFor(m => item.CONTACTNUMBER, new { @class = "form-control from_bg", title = "Enter Contact Number", @onkeypress = "return isNumber(event);", @maxLength = "10", @Id = "contactno_" + i, @Name = "contactno_" + i, @readonly = "true" })

                    </div>
                    <div class="col-lg-2">
                        <label for="pwd">
                            PURPOSE :
                        </label>
                    </div>
                    <div class="col-lg-2">
                        @Html.TextBoxFor(m => item.PURPOSE, new { @class = "form-control from_bg", title = "Enter PURPOSE", @Id = "visitpurpose_" + i, @Name = "visitpurpose_" + i, @readonly = "true" })
                    </div>

                    <div class="col-lg-2">
                        <label for="pwd">
                            REMARKS :
                        </label>
                    </div>
                    <div class="col-lg-2">
                        @Html.TextBoxFor(m => item.REMARKS, new { @class = "form-control from_bg", title = "Enter Remarks", @Id = "remarks_" + i, @Name = "remarks_" + i, @readonly = "true" })
                    </div>

                </div>
               
                <div class="row">
                    <div class="col-lg-2">
                        <label for="pwd">
                            PLAN INTIME :
                        </label>
                    </div>
                    <div class="col-lg-2">
                        @Html.TextBoxFor(m => item._PLANINTIME, new { @class = "form-control from_bg meetingtime ", title = "Enter Intime", @Id = "ptimein_" + i, @Name = "ptimein_" + i, @placeholder = "i.e HH:MM", @readonly = "true" })

                    </div>
                    <div class="col-lg-2">
                        <label for="pwd"> PLAN OUTTIME :</label>
                    </div>
                    <div class="col-lg-2">
                        @Html.TextBoxFor(m => item._PLANTOUTTIME, new { @class = "form-control from_bg  meetingtime", title = "Enter Outtime", @Id = "ptimeout_" + i, @Name = "ptimeout_" + i, @placeholder = "i.e HH:MM", @readonly = "true" })

                    </div>

                    <div class="col-lg-2">
                        <label for="pwd">

                        </label>
                    </div>
                    <div class="col-lg-2">

                    </div>
                </div>

                <div class="row">
                    <div class="col-lg-2">
                        <label for="pwd"  class="redlabel"> ACTUAL TIME IN:</label>
                    </div>
                    <div class="col-lg-2">
                        @if (Model.ActionName == Constants.BTN_EDIT)
                        {
                            @Html.TextBoxFor(m => item._CHECKINTIME, new { @class = "form-control from_bg  meetingtime", title = "Enter Actual Time In", @Id = "atimein_" + i, @Name = "atimein_" + i, @onkeypress = "return timevalidate(event);", @onfocusout = "checktimeformat(this);",  @placeholder = "HH:MM", @maxlength = "5" })

                        }
                        else
                        {
                            @Html.TextBoxFor(m => item._CHECKINTIME, new { @class = "form-control from_bg  meetingtime", title = "Enter Actual Time In", @Id = "atimein_" + i, @Name = "atimein_" + i, @onkeypress = "return timevalidate(event);", @onfocusout = "checktimeformat(this);", @placeholder = "HH:MM", @maxlength = "5", @readonly = "readonly" })
                            @*@Html.TextBoxFor(m => item._CHECKINTIME, new { @class = "form-control from_bg  meetingtime", title = "Enter Actual Time In", @Id = "atimein_" + i, @Name = "atimein_" + i, @onkeypress = "return timevalidate(event);", @placeholder = "i.e HH:MM", @maxlength = "5" })*@

                        }

                    </div>
                    <div class="col-lg-2">
                        <label for="pwd" class="redlabel">
                            ACTUAL TIME OUT :
                        </label>
                    </div>
                    <div class="col-lg-2">
                        @if (Model.ActionName == Constants.BTN_EDIT)
                        {
                            @Html.TextBoxFor(m => item._CHECKOUTTIME, new { @class = "form-control from_bg", title = "Enter Actual Time Out", @Id = "atimeout_" + i, @Name = "atimeout_" + i, @onkeypress = "return timevalidate(event);", @onfocusout = "checktimeformat(this);", @placeholder = "HH:MM", @maxlength = "5" })

                        }
                        else
                        {
                            @Html.TextBoxFor(m => item._CHECKOUTTIME, new { @class = "form-control from_bg", title = "Enter Actual Time Out", @Id = "atimeout_" + i, @Name = "atimeout_" + i, @onkeypress = "return timevalidate(event);", @onfocusout = "checktimeformat(this);", @placeholder = "HH:MM", @maxlength = "5", @readonly = "readonly" })
                            @*@Html.TextBoxFor(m => item._CHECKOUTTIME, new { @class = "form-control from_bg", title = "Enter Actual Time Out", @Id = "atimeout_" + i, @Name = "atimeout_" + i, @onkeypress = "return timevalidate(event);", @placeholder = "i.e HH:MM", @maxlength = "5" })*@

                        }
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-2">
                        <label for="pwd" class="redlabel">
                            ACTUAL REMARKS
                        </label>
                    </div>
                    <div class="col-lg-8">
                        @if (Model.ActionName == Constants.BTN_EDIT)
                        {
                            @Html.TextAreaFor(m => item.ACTUAL_REMARKS, 100, 40, new { @class = "form-control from_bg", @Id = "actualremarks_" + i, @Name = "actualremarks_" + i, @rows = "10", @cols = "50", @maxlength = "450" })
                        }
                        else
                        {
                            @Html.TextAreaFor(m => item.ACTUAL_REMARKS, 100, 40, new { @class = "form-control from_bg", @Id = "actualremarks_" + i, @Name = "actualremarks_" + i, @rows = "10", @cols = "50", @maxlength = "450", @readonly="readonly" })

                        }
                    </div>
                </div>
                if (Model.ActionName == Constants.BTN_EDIT)
                {
                    <div class="card-footer">
                        <div class="clearfix">
                            <div class="float-left">
                                <button onclick="return fillactual()" class="btn btn-primary" type="button">Submit</button>
                                @*<a href="@Url.Action("CreateSalesOrder","SalesOrder")"> <button type="button" class="btn btn-info btn-lg" value="Payment Order">Sale Order</button></a>
                                <a href="@Url.Action("CollectionList","Collection")">      <button type="button" class="btn btn-info btn-lg" value="Payment Collection">Payment Collection</button></a>
                                <a href="@Url.Action("ClaimList","Claim")"> <button type="button" class="btn btn-info btn-lg" value="Sale Return">Sale Return</button> </a>
                                <a href="@Url.Action("ComplaintList","Complaint")"> <button type="button" class="btn btn-info btn-lg" value="Complainant">Complaint</button>  </a>*@



                            </div>
                        </div>
                    </div>
                }



            }
        }







    </div>



    }

</div>





<div id="rescheduleinfodv">
    <form id="rescheduledata" name="rescheduledata">
        <div id="reschedulebody">
            <div class="row">
                <div class="col-lg-3">
                    <label for="pwd">DATE :</label>
                </div>
                <div class="col-lg-3">
                    <input type="text" id="rescheduledate" name="rescheduledate" class="form-control from_bg from_bg2 datepicker" readonly value="" />
                    @Html.HiddenFor(m => m.Planid)

                </div>
            </div>

            <br />

            <div class="row">
                <div class="col-lg-3">
                    <label for="pwd">Day Type :</label>
                </div>
                <div class="col-lg-3">

                    @Html.DropDownListFor(m => m.SelectedDaytype_id, new SelectList(Model.daytypeMasterList, "DAYTYPE_ID", "DAYTYPENAME"), "--Select Day type--", new { @class = "form-control", @onchange = "return dsrblockinfo(this.value);" })
                    @Html.ValidationMessageFor(model => model.SelectedDaytype_id)
                </div>
            </div>
            <br />

            <div class="row">
                <div class="col-lg-3">
                    <label for="pwd">
                        TIME IN  :
                    </label>
                </div>
                <div class="col-lg-3">
                    <input type="text" id="restimein" onkeypress="return timevalidate(event);" placeholder="HH:MM"  maxlength="5" name="restimein" class="form-control from_bg from_bg2" />
                </div>
                <div class="col-lg-3">
                    <label for="pwd">
                        TIME OUT  :
                    </label>
                </div>
                <div class="col-lg-3">
                    <input type="text" id="restimeout" onkeypress="return timevalidate(event);"  placeholder="HH:MM" maxlength="5" name="restimeout" class="form-control from_bg from_bg2" />
                </div>
            </div>
        </div>

        <div id="reschedulefooter">
            <button type="button" class="btn btn-info btn-lg" onclick="reschedueplan();" value="button">Submit</button>
           
        </div>

    </form>
</div>




<script src="/js/bootstrap-datepicker.js" type="text/javascript"></script>
<script src="~/Scripts/ProjectJS/ManageMaster_Common.js"></script>
<script src="~/Scripts/ProjectJS/Common.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $(".datepicker").datepicker({ format: 'dd/M/yyyy', orientation: "bottom auto", autoclose: true, });

        // $(".select-chosen").chosen();
       
        $('#rescheduleinfodv').hide();
        $('#plandate').val(formatDate($('#plandate').val()));
        $("#ptimein_1").val(gettimefromdate($("#ptimein_1").val()));
        $("#ptimeout_1").val(gettimefromdate($("#ptimeout_1").val()));
        $("#atimein_1").val(gettimefromdate($("#atimein_1").val()));
        $("#atimeout_1").val(gettimefromdate($("#atimeout_1").val()));
     
     
    
        $('#SelectedDaytype_id').prop('disabled', true);
        $('#Selectedcustomer_id_1').prop('disabled', true);
        $('#Selectedcity_id_1').prop('disabled', true);
        $('#plandate').prop('disabled', true);
        //$('#plandate').val(formatDate(new Date($('#plandate').val().split(' ')[0].split("-").reverse().join("-"))));
       
       

    });


    function reschededata(planid) {
        $('.modal-title').html("RESCHEDULE PLAN");
        $('.modal-body').html($("#reschedulebody").html());
        $('.modal-footer').html($("#reschedulefooter").html());
        $('#myModal').modal('show');
        $(".datepicker").datepicker({ format: 'dd/M/yyyy', orientation: "bottom auto", autoclose: true, startDate: new Date(), endDate: '+7d' }).on('changeDate', function (e) {
            Checkdsrexist($('#rescheduledate').val());
        });;

    }

    function paymentcollection(planid) {
       
       window.location.href = "/Collection/CollectionEntry/" + planid+ "@Constants.HASH_COLLECTION";
     
    }
    function compalintregister(planid) {
       
       window.location.href = "/Claim/CreateClaimReason?ActionName=create&id=" + planid+ "@Constants.HASH_COLLECTION";
    
    }
    function gettimefromdate(getdate) {
        var getres = getdate.split(" ");
        var fintime = getres = getres[1].split(":");
        var resulttime = fintime[0] + ":" + fintime[1];
        return resulttime;
    }
    function fillactual() {

        if ($("#actualremarks_1").val().length == 0 || $("#actualremarks_1").val().length == 0) {
            alert("Please Enter Actual Remarks");
            $("#actualremarks_1").focus();
            return false;
        }
        if ($("#atimein_1").val().length == 0) {
            alert("Please Enter Valid Time i.e HH:MM");
            $("#atimein_1").focus();
            return false;
        }
        if ($("#atimeout_1").val().length == 0) {
            alert("Please Enter Valid Time i.e HH:MM");
            $("#atimeout_1").focus();
            return false;
        }
        if (!validateHhMm($("#atimein_1").val()) || !validateHhMm($("#atimeout_1").val())) {
            alert("Please Enter Valid Time  i.e HH:MM");
            $("#atimein_1").focus();
            return false;
        }
        if (compareTime($("#atimein_1").val(),$("#atimeout_1").val()) == 1) {
            alert("InTime Can't Greater Than OutTime ");
            $("#atimein_1").focus();
            return false;
        }
       
        var checkUrl = '/dsr/fillactualtiminout';
        $.ajax({
            type: "POST",
            contentType: "application/json; charset=utf-8",
            url: checkUrl,
            data: JSON.stringify({ atimein_1: $("#atimein_1").val(), atimeout_1: $("#atimeout_1").val(), planmid: $("#planmid").val(), plandate: $("#plandate").val(), remarks: $("#actualremarks_1").val() }),
            dataType: "json",
            success: function (returndata) {
                if (returndata.PLANID > 0) {

                    alert("Updated Successfully Actual Time");
                    if ($("#from").val() != "") {
                        var myUrl = '@Url.Action("DSRApproval", "DSR")';
                    window.location.href = myUrl;
                    }
                    else {
                        var myUrl = '@Url.Action("CreateDSRActualList", "DSR")';
                    window.location.href = myUrl;
                    }
                    
                }

            },

        });
    }

    function reschedueplan() {
        if ($("#restimein").val().length == 0 || $("#restimeout").val().length == 0 || $("#rescheduledate").val().length == 0) {
            alert("Please Enter Valid Time HH:MM and Choose Reschedule Date");
            $('#myModal').modal('show');
            return false;
        }
        if (!validateHhMm($("#restimein").val()) && !validateHhMm($("#restimeout").val())) {
            alert("Please Enter Valid Time");
            $('#myModal').modal('show');
            return false;
        }

        var checkUrl = '/dsr/reschedueplan';
        $.ajax({
            type: "POST",
            contentType: "application/json; charset=utf-8",
            url: checkUrl,
            data: JSON.stringify({ Planid: $("#Planid").val(), rescheduledate: $("#rescheduledate").val(), SelectedDaytype_id: $("#SelectedDaytype_id").val(), restimein: $("#restimein").val(), restimeout: $("#restimeout").val() }),
            dataType: "json",
            success: function (returndata) {
                if (returndata.status > 0) {
                    alert("Reschedule Plan Successfully !");
                    $('#myModal').modal('hide');
                }

            },

        });
    }
    function validateHhMm(inputField) {
       
        var isValid = /^([0-1]?[0-9]|2[0-4]):([0-5][0-9])(:[0-5][0-9])?$/.test(inputField);

        if (isValid) {
      
            return true;
        } else {
          
            return false;
        }

        return isValid;
    }
    function checktimeformat(frtval) {
        var isValid = /^([0-1]?[0-9]|2[0-4]):([0-5][0-9])(:[0-5][0-9])?$/.test(frtval.value);
        if (isValid == false) {
            $("#" + frtval.id).css('border-color', 'red');
            $("#" + frtval.id).focus();
            return false;
        } else {
            $("#" + frtval.id).css('border-color', '');
            // $("#" + frtval.id).focus();
            return true;
        }

    }

    function timevalidate(evt) {
        evt = (evt) ? evt : window.event;
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode > 31 && (charCode < 48 || charCode > 57) && charCode > 43 && charCode > 45 && charCode != 58) {
            return false;
        }
        return true;
    }
    function Checkdsrexist(plandate) {
        if (plandate.length==0) {
            alert("Choose Plan Date!"); return false;
        }
        var checkUrl = '/dsr/checkdsrexist';
        $.ajax({
            type: "POST",
            contentType: "application/json; charset=utf-8",
            url: checkUrl,
            data: JSON.stringify({ plandate: plandate }),
            dataType: "json",
            success: function (returndata) {
                if (returndata.PLANID > 0) {
                    alert("This Date is Already Planed with Plancode " + returndata.PLANCODE);
                    return false;
                }

            },

        });
    }
    function compareTime(str1, str2) {
        if (str1 === str2) {
            return 0;
        }
        var time1 = str1.split(':');
        var time2 = str2.split(':');
        if (eval(time1[0]) > eval(time2[0])) {
            return 1;
        } else if (eval(time1[0]) == eval(time2[0]) && eval(time1[1]) > eval(time2[1])) {
            return 1;
        } else {
            return -1;
        }
    }


    var requesttype = '@(Model.ActionName)';
    if (requesttype=='view') {
        $("#DSRApprovalDetail :input").prop("disabled", true);
        $("#DSRApprovalDetail select").attr("disabled", "disabled");
        $("#actualremarks_1").attr("disabled", "disabled");
    }
</script>

