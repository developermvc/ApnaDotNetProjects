@model LumaxDMS.Models.SchemeApplicatorModel

@{
    var counter = 1;
}

@section CSS
{
    <link href="/Content/AutoCompleteCSS/chosen.css" rel="stylesheet" type="text/css" />
}

<div class="row">
    <div class="col-lg-2 col-xs-12">
        <label for="pwd">
            Country:
        </label>
    </div>
    <div class="col-lg-2 col-xs-12">
        @Html.DropDownListFor(model => model.SelectedCountry_id, new SelectList(Model.countryMasterList, "Country_Id", "CountryName"), "--Select--", new { @class = "form-control", @onchange = "return onChangeCountry(this);" })
    </div>
    <div class="col-lg-2 col-xs-12">
        <label for="pwd">
            Zone:
        </label>
    </div>
    <div class="col-lg-2 col-xs-12">
        @Html.DropDownListFor(m => m.SelectedZoneId, new SelectList(Model.zoneMasterList, "Zone_Id", "ZoneName", ""), "--Select--", new { @class = "form-control", @onchange = "return onChangeOfZone(this);" })
    </div>
    <div class="col-lg-2 col-xs-12">
        <label for="pwd">
            State:
        </label>
    </div>
    <div class="col-lg-2 col-xs-12">
        @Html.DropDownListFor(model => model.SelectedStateId, new SelectList(Model.stateMasterList, "State_Id", "StateName"), "--Select--", new { @class = "form-control", @onchange = "return onChangeState(this);" })
    </div>
</div>
<div class="row  row_pt">
    <div class="col-lg-2 col-xs-12">
        <label for="pwd">
            Territory:
        </label>
    </div>
    <div class="col-lg-2 col-xs-12">
        @Html.DropDownListFor(model => model.SelectedTerritoryId, new SelectList(Model.territoryMasterList, "Territory_Id", "TerritoryCode"), "--Select--", new { @class = "form-control", @onchange = "return onChangeTerritory(this);" })
    </div>
    <div class="col-lg-2 col-xs-12">
        <label for="pwd">
            District:
        </label>
    </div>
    <div class="col-lg-2 col-xs-12">
        @Html.DropDownListFor(model => model.SelectedDistrictId, new SelectList(Model.districtMasterList, "District_Id", "DistrictName"), "--Select--", new { @class = "form-control", @onchange = "return onChangeDistrict(this);" })
    </div>
    <div class="col-lg-2 col-xs-12">
        <label for="pwd">
            City:
        </label>
    </div>
    <div class="col-lg-2 col-xs-12">
        @Html.DropDownListFor(model => model.SelectedCityId, new SelectList(Model.cityMasterList, "City_Id", "CityName"), "--Select--", new { @class = "form-control", @onchange = "return onChangeCity(this);" })
    </div>
</div>
<div class="row  row_pt">
    <div class="col-lg-2 col-xs-12">
        <label for="pwd">
            Party:
        </label>
    </div>
    <div class="col-lg-2 col-xs-12">
        @Html.DropDownListFor(model => model.SelectedDealerId, new SelectList(Model.dealerMasterList, "Dealer_Id", "DealerName"), "--SELECT--", new { @class = "chosen-select" })
    </div>
    <div class="col-lg-2 col-xs-12">
        <label for="pwd">
            Party Group:
        </label>
    </div>
    <div class="col-lg-2 col-xs-12">
        @Html.DropDownListFor(model => model.SelectedPartyGrpHDR_ID, new SelectList(Model.partyGroupHdrMasterList, "PartyGrpHDR_ID", "PartyGrpName"), "--Select--", new { @class = "form-control" })
    </div>
    <div class="col-lg-2 col-xs-12">
        <div class="float-left">
            <input type="button" class="btn btn-primary" name="btntype" value="Add" id="btnfilter"
                   onclick="return filterDelears();" />
        </div>
    </div>

    <br />
</div>
<hr />
<div class="col-sm-12 col-md-12">
    <table id="dealerTbl" class="table table-striped table-bordered dt-responsive nowrap"
           style="width: 100%">
        <thead class="thead-lights">
            <tr>
                <th style="width: 10%">
                    <input type="checkbox" onchange="return checkAllchekBoxs(this);" id="checkAll" name="checkAll"
                           class="pull-left" />
                    <a href="#" onclick="return removeCheckedParty();" title="Remove Checked Rows">
                    <i class="fa fa-trash tp-7"></i></a>
                </th>
                <th>
                    CHANNEL PARTNER Code
                </th>
                <th>
                    CHANNEL PARTNER Name
                </th>
                <th>
                    City
                </th>
            </tr>
        </thead>
            @if (Model.SchemePartyDetailList != null)
            {
                <tbody>
                @Html.Hidden("PartyDetailCount", Model.SchemePartyDetailList.Count, new { @Name = "PartyDetailCount" })
                @foreach (var item in Model.SchemePartyDetailList)
                {
                    <tr id='tblRows_@item.DEALERID'>
                        <td>
                            <input type='checkbox' name='tblChekboxes' id='check_@item.DEALERID' />
                        </td>
                        <td>
                            @Html.HiddenFor(m => item.DEALERID, new { @Name = "DealerId_" + counter })
                            @item.DEALERCODE
                        </td>
                        <td>
                            @item.DEALERNAME
                        </td>
                        <td>
                            @item.CITYNAME
                        </td>
                    </tr>
                    counter++;
                }
        </tbody>
            }
    </table>
</div>

@section JS
{
    <script src="/Content/AutoCompleteJS/chosen.jquery.js" type="text/javascript"></script>
    <script src="/Scripts/moment.min.js" type="text/javascript"></script>
    <script src="/Scripts/ProjectJS/ManageMaster_Common.js" type="text/javascript"></script>

    <script type="text/javascript">
    function onChangeCountry(obj) {
        bindZoneDDL(obj.value, '@Url.Action("GetZoneByCountryId", "ManageMaster")');
        bindStateDDL(obj.value, '@Url.Action("GetStateByCountryId", "ManageMaster")');
        bindTerritoryDDL(obj.value, '@Url.Action("GetTerritoryByCountryId", "ManageMaster")');
        $("#SelectedDistrictId").html("<option value=''>--Select--</option>");
        $("#SelectedCityId").html("<option value=''>--Select--</option>");
        $("#SelectedStateId").html("<option value=''>--Select--</option>");
    }
    function onChangeOfZone(obj) {
        bindStateDDL(obj.value, '@Url.Action("GetStateByZoneId", "ManageMaster")');
        $("#SelectedDistrictId").html("<option value=''>--Select--</option>");
        $("#SelectedStateId").html("<option value=''>--Select--</option>");
        $("#SelectedCityId").html("<option value=''>--Select--</option>");
    }
    function onChangeState(obj) {
        bindDistrictDDL(obj.value, '@Url.Action("GetDistrictByStateId", "ManageMaster")');
        $("#SelectedCityId").html("<option value=''>--Select--</option>");
    }
    function onChangeTerritory(obj) {
        bindDistrictDDL(obj.value, '@Url.Action("GetDistrictByTerritoryId", "ManageMaster")');
        $("#SelectedCityId").html("<option value=''>--Select--</option>");
    }
    function onChangeDistrict(obj) {
        bindCityDDL(obj.value, '@Url.Action("GetCityByDistrictId", "ManageMaster")');
    }
    function onChangeCity(obj) {
        bindDealerDDL(obj.value, '@Url.Action("GetDealerByCityId", "Admin")');
    }

    function filterDelears() {
        var countryId = $('#SelectedCountry_id').val();
        var zoneId = $('#SelectedZoneId').val();
        var territoryId = $('#SelectedTerritoryId').val();
        var stateId = $('#SelectedStateId').val();
        var districtId = $('#SelectedDistrictId').val();
        var cityId = $('#SelectedCityId').val();
        var partyGrpHdrId = $('#SelectedPartyGrpHDR_ID').val();
        debugger;
        $.ajax({
            url: '@Url.Action("GetFilteredDealersByGeography", "Admin")',
            type: "GET",
            dataType: "JSON",
            data: { countryId: countryId, zoneId: zoneId, territoryId: territoryId, stateId: stateId, districtId: districtId, cityId: cityId, partyGrpHdrId: partyGrpHdrId },
            success: successDealer,
            error: function failDealer(result) { debugger; }
        });
    }
    function successDealer(result) {

        var arr = [];

        $("tbody tr").each(function () {

            arr.push(this.id.substring(8));

        });
        debugger;
        $.each(result, function (i, data) {
            if (jQuery.inArray("" + data.Dealer_Id + "", arr) !== -1) { }
            else {
                $('#dealerTbl tbody').append("<tr id='tblRows_" + data.Dealer_Id + "'><td><input type='checkbox' name='tblChekboxes' id='check_" + data.Dealer_Id + "' /></td><td>" + data.DealerCode + "</td><td>" + data.DealerName + "</td><td>" + data.CityName + "</td></tr>");
            }
        });
    }

    function removeChecked() {
        debugger;
        $('table tr').has('input[name="tblChekboxes"]:checked').remove();
        $('input[name="checkAll"]').each(function () {
            this.checked = false;
        });
    }

    function checkAllchekBoxs(obj) {
        var status = obj.checked;
        debugger;
        $('input[name="tblChekboxes"]').each(function () {
            this.checked = status;
        });
    }

    </script>
}
