@model LumaxDMS.Models.SchemeApplicatorModel
@using LumaxDMS.AppCode
@using BusinessManager.Entities
@{
    ViewBag.Title = "CreateSchemeApplicator";
    var counter = 1;
}


@section CSS
{
    @*<link href="/Content/AutoCompleteCSS/chosen.css" rel="stylesheet" type="text/css" />*@
    <link href="~/Content/css/bootstrap-datepicker.css" rel="stylesheet" />
}
@using (Html.BeginForm("CreateSchemeApplicator", "Scheme", FormMethod.Post, new { @Id = "SCFormId" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.User_Id, new { @Id = "selectedUserId" })
    @Html.HiddenFor(m => m.hdnSelectedIGroup)
    @Html.HiddenFor(m => m.hdnSelectedPGroup)
    @Html.HiddenFor(m => m.Scheme_Id, new { @Id = "selectedSchemeId", @Value = Model.Scheme_Id })

    <input type="hidden" name="partyloopcount" id="partyloopcount" value="@Model.SchemePartyDetailList.Count" />
    <input type="hidden" name="itemloopcount" id="itemloopcount" value="@Model.SchemeItemDetailList.Count" />

    <div>
        @{Html.RenderPartial("_Message", Model);}
        @Html.Partial("_WaitModal")
        <div class="card card_ps">
            <div class="panel panel-default">
                <div class="header_ps">
                    @if (@Model.Scheme_Id > 0)
                    {
                        if (Model.ActionName.ToUpper() == "VIEW")
                        {
                            <span>VIEW SCHEME</span>
                        }
                        else
                        {
                            <span>UPDATE SCHEME </span>
                        }
                    }
                    else
                    {
                        <span>CREATE SCHEME</span>
                    }
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-lg-2 col-xs-12">
                            <label for="pwd">
                                Scheme Code:
                            </label>
                        </div>
                        <div class="col-lg-2 col-xs-12">
                            @Html.TextBoxFor(model => model.SchemeCode, new { @class = "form-control", disabled = "disabled" })
                        </div>
                        <div class="col-lg-2 redlabel">
                            <label for="pwd">
                                Scheme Name:
                            </label>
                        </div>
                        <div class="col-lg-2">
                            @Html.TextBoxFor(model => model.SchemeName, new { @class = "form-control", @onchange = "return ValidateSchemeNameExist(this);" })
                            @Html.ValidationMessageFor(model => model.SchemeName)
                        </div>
                        <div class="col-lg-2 col-xs-12 redlabel">
                            <label for="pwd">
                                Applicable On:
                            </label>
                        </div>
                        <div class="col-lg-2 col-xs-12">
                            <div class="input-group">
                                @Html.DropDownListFor(m => m.Apply_on_Id, new SelectList(Model.SchemeApplyList, "Apply_on_ID", "Apply_on_Name"), "-- Select--", new { @class = "form-control", @onchange = "return DealerPartValidation();" })
                                @Html.ValidationMessageFor(model => model.Apply_on_Id)
                            </div>
                        </div>
                    </div>
                    <div class="row row_pt">
                        <div class="col-lg-2 col-xs-12 redlabel">
                            <label for="pwd">
                                From Date:
                            </label>
                        </div>

                        @*<div class="col-xl-3 col-10">
                                <div class="input-group date" id="datetimepicker1">
                                    <input class="form-control" type="text">
                                    <span class="input-group-append input-group-addon">
                                        <span class="input-group-text fas fa-calendar-alt"></span>
                                    </span>
                                </div>
                            </div>*@





                        <div class="col-lg-2 col-xs-12">
                            <div class="input-group date" id="fromdatepicker">
                                @Html.TextBoxFor(@model => model.From_Date, new { @class = "form-control datepicker", @onchange = "return CheckValidateDate();", @readonly = "readonly" })
                                @*<label class="input-group-addon btn" for="date">
                                        <span class="fa fa-calendar open-datetimepicker"></span>
                                    </label>*@
                                <span class="input-group-append input-group-addon">
                                    <i class="input-group-text2 fa fa-calendar"></i>
                                </span>
                            </div>
                            @Html.ValidationMessageFor(model => model.From_Date)
                        </div>
                        <div class="col-lg-2 col-xs-12 redlabel">
                            <label for="pwd">
                                To Date:
                            </label>
                        </div>
                        <div class="col-lg-2 col-xs-12">
                            <div class="input-group date" id="todatepicker">
                                @Html.TextBoxFor(model => model.To_Date, new { @class = "form-control datepicker1", @onchange = "return CheckValidateDate();", @readonly = "readonly" })

                                <span class="input-group-append input-group-addon">
                                    <i class="input-group-text2 fa fa-calendar"></i>
                                </span>
                            </div>
                            @Html.ValidationMessageFor(model => model.To_Date)
                        </div>

                        <div class="col-lg-2 col-xs-12">
                            <label for="pwd">
                                IsActive:
                            </label>
                        </div>
                        <div class="col-lg-2 col-xs-12">
                            @Html.CheckBoxFor(model => model.IsActive)
                        </div>
                    </div>
                    <br />
                    <div class="container" style="font-size:12px">


                        <!-- Nav tabs -->
                        <ul class="nav nav-tabs" role="tablist">
                            <li class="nav-item">
                                <a class="nav-link active" style="font-size:inherit" data-toggle="tab" href="#customer">CHANNEL PARTNER DETAIL</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" font-size:inherit" data-toggle="tab" href="#item">ITEM DETAIL</a>
                            </li>

                            <li class="nav-item">
                                <a class="nav-link" font-size:inherit" data-toggle="tab" href="#PGlist">PARTY GROUP</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" font-size:inherit" data-toggle="tab" href="#IGlist">ITEM GROUP</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" font-size:inherit" data-toggle="tab" href="#list">SCHEME DETAIL</a>
                            </li>

                        </ul>

                        <!-- Tab panes -->
                        <div class="tab-content">
                            <div id="customer" class="container tab-pane active">
                                <div class="col-md-12">
                                    <div class="panel-heading header_ps" style="padding:3px;"><span>Channel Partner Detail</span></div>
                                    <div class="hideonview"> @{Html.RenderPartial("AddPartyFilter", Model);}</div>
                                    <br />
                                    <div id="partydetaildiv">
                                        @{Html.RenderPartial("_SchemePartyDetailList", Model);}
                                    </div>
                                </div>
                            </div>

                            <div id="item" class="container tab-pane fade">
                                <div class="col-md-12">
                                    <div class="panel-heading header_ps" style="padding:3px;"><span>Item Detail</span></div>
                                    <div class="hideonview">
                                        @{Html.RenderPartial("AddItemFilter", Model);}
                                    </div>
                                        <br />
                                        <div id="itemdetaildiv">
                                            @{Html.RenderPartial("_SchemeItemDetailList", Model);}
                                        </div>
                                    </div>
                            </div>
                            @*//ADD 10_sep-2019*@
                            <div id="IGlist" class="container tab-pane fade">
                                <div class="col-md-12">
                                    <div class="panel-heading header_ps" style="padding:3px;"><span>Item Group Detail</span></div>
                                    <br />
                                    <div class="row">
                                        <div class="col-lg-2 col-xs-12">

                                            @Html.DropDownListFor(m => m.IGSelectedItemType, new SelectList(Model.ItemGroupTypeList, "Value", "Text"), new { @class = "form-control po_hdr" })
                                        </div>
                                        <div class="col-lg-10 col-xs-12">

                                            @Html.ListBoxFor(model => model.IGSelectedIds, new SelectList(Model.ItemGroupList, "AREAID", "AREANAME"), new { @Id = "lbItem_6", @Name = "sbItemGroup", @Class = "itemchosen-select itmgroup" })


                                        </div>
                                    </div>
                                    @*@{Html.RenderPartial("AddItemFilter", Model);}*@

                                </div>
                            </div>
                            <div id="PGlist" class="container tab-pane">
                                <div class="col-md-12">
                                    <div class="panel-heading header_ps" style="padding:3px;"><span>Party Group Detail</span></div>
                                    <br />
                                    <div class="row">
                                        <div class="col-lg-2 col-xs-12">
                                            @Html.DropDownListFor(m => m.PGSelectedAreaType, new SelectList(Model.PGAreaTypeList, "Value", "Text"), new { @class = "form-control po_hdr" })

                                        </div>
                                        <div class="col-lg-10 col-xs-12">


                                            @Html.ListBoxFor(model => model.PGSelectedIds, new SelectList(Model.PartyGroupList, "AREAID", "AREANAME", Model.C_SelectedIds), new { @Id = "lbArea_8", @Name = "sbPartyGroup", @Class = "avaiable_mcode areachosen-select pgroup" })

                                        </div>
                                    </div>
                                </div>





                            </div>
                            @*////*@







                            <div id="list" class="container tab-pane fade">
                                <div class="col-md-12">
                                    <div class="panel-heading header_ps" style="padding:3px;"><span>Scheme Detail</span></div>

                                    <br />

                                    <table id="SchemeSlabDetailList" class="table border fixed_header custom_responsive2">
                                        <thead class="thead-lights">
                                            <tr>
                                                <th>
                                                    <input type="checkbox" id="chkSelectAllScheme" class="pull-left" />
                                                    <a href="#" onclick="return removeCheckedScheme();" title="Remove Checked Rows"><i class="fa fa-trash bg_red"></i></a>
                                                </th>
                                                <th id="dislabelminhdr">
                                                    Min Qty
                                                </th>
                                                <th>
                                                    Min Item
                                                </th>
                                                <th>
                                                    Multiply On Min Qty
                                                </th>
                                                <th id="dislabelhdr">
                                                    Discount_Rate_Or_Qty
                                                </th>
                                                <th>
                                                    Remarks
                                                </th>
                                            </tr>
                                        </thead>
                                        @if (Model.SchemeSlabDetailList != null)
                                        {
                                            <tbody>
                                                @Html.Hidden("SchemeDetailCount", Model.SchemeSlabDetailList.Count, new { @Name = "SchemeDetailCount" })
                                                @foreach (var item in Model.SchemeSlabDetailList)
                                                {
                                                    <tr>
                                                        <td>
                                                            <input type="checkbox" />&nbsp;
                                                            @Html.HiddenFor(m => item.SCHEME_ID, new { @id = "Scheme_Id_" + counter, @Name = "Scheme_Id_" + counter })
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(m => item.MIN_QTY, new { @id = "Min_Qty_" + counter, @Name = "Min_Qty_" + counter, @class = "form-control numberinput", @onchange = "return CheckValidMinQty(this);" })
                                                            @*@item.Min_Qty
                                                                @Html.HiddenFor(m => item.Min_Qty, new { @Name = "Min_Qty_" + counter })*@
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(m => item.MIN_ITEM, new { @id = "Min_Item_" + counter, @Name = "Min_Item_" + counter, @class = "form-control numberinput", @onchange = "return CheckValidMinItem(this);" })
                                                            @*@item.Min_Item
                                                                @Html.HiddenFor(m => item.Min_Item, new { @Name = "Min_Item_" + counter })*@
                                                        </td>
                                                        <td>
                                                            @Html.DropDownListFor(m => item.X_FACTOR, new SelectList(Model.GetAllXFactorList, "Value", "Text", item.X_FACTOR), "-- Select--", new { @id = "X_Factor_" + counter, @Name = "X_Factor_" + counter, @class = "form-control" })
                                                            @*@Html.TextBoxFor(m => item.X_Factor, new { @Name = "X_Factor_" + counter, @class = "form-control" })*@
                                                            @*@item.X_Factor
                                                                @Html.HiddenFor(m => item.X_Factor, new { @Name = "X_Factor_" + counter })*@
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(m => item.DISCOUNT_RATE_OR_QTY, new { @id = "Discount_or_rate_Qty_" + counter, @Name = "Discount_or_rate_Qty_" + counter, @class = "form-control decimalinput" })
                                                            @*@item.Discount_rate_or_Qty
                                                                @Html.HiddenFor(m => item.Discount_rate_or_Qty, new { @Name = "Discount_or_rate_Qty_" + counter })*@
                                                        </td>
                                                        <td>
                                                            @Html.TextBoxFor(m => item.REMARKS, new { @id = "Reamrks_" + counter, @Name = "Reamrks_" + counter, @class = "form-control" })
                                                            @*@item.Remarks
                                                                @Html.HiddenFor(m => item.Remarks, new { @Name = "Reamrks_" + counter })*@
                                                        </td>
                                                    </tr>
                                                    counter++;
                                                }
                                            </tbody>
                                        }
                                    </table>
                                    <br />
                                    <div class="clearfix">
                                        <input type="button" name="btntype" value="Add Row" id="btnaddrow" class="btn btn-primary" />
                                    </div>

                                </div>
                            </div>
                        </div>

                        @*<div class="col-md-12">*@

                        @*</div>*@
                    </div>
                </div>
                <div class="card-footer">
                    <div class="clearfix">
                        <div class="float-right">
                            @if (Model.SchemeStatus != (int)CommonFunction.SchemeApplicatorStatus.Approved)
                            {
                                <input type="submit" name="btntype" value="Save" id="btnadd" class="btn btn-primary" onclick="return CheckSchemeValidation();" />
                            }
                            <input type="submit" name="btntype" value="Submit" id="btnadd" class="btn btn-primary" onclick="return CheckSchemeValidation();" />
                            @if (Model.Scheme_Id == 0)
                            {
                                <input type="button" class="btn btn-primary" name="btntype" value="Clear" onclick="return Clear();" />
                            }

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}


@section JS
{

    <script src="~/Scripts/bootstrap-datepicker.js"></script>
    <script src="~/Scripts/ProjectJS/Common.js"></script>
    <script src="/Scripts/moment.min.js" type="text/javascript"></script>
    <script src="~/Scripts/ProjectJS/C_ItemJS.js"></script>
    <script src="~/Scripts/ProjectJS/C_AreaJS.js"></script>
    <script src="~/Scripts/ProjectJS/ItemGroupJS.js"></script>
    <script src="~/Scripts/ProjectJS/PartyGroupJS.js"></script>
    <script>
        $(document).ready(function () {


            $('.itmgroup').on('change', function () {
                var id = "";
                if (id == "") {
                    id = $(this).val();
                }
                else {
                    id = id + "," + $(this).val();
                }

                $('#hdnSelectedIGroup').val(id);
            });

            $('.pgroup').on('change', function () {
                debugger;
                var id = "";
                if (id == "") {
                    id = $(this).val();
                }
                else {
                    id = id + "," + $(this).val();
                }
                $('#hdnSelectedPGroup').val(id);
            });

        });
    </script>
    <script type="text/javascript">
        var valid = true;
        var elementddlspan = document.createElement("div");
        var elementddlPart = document.createElement("div");
        var numrows = Number('@counter'); // because you are starting with 1 row visible
        var serialnumber = 1;
        var rowsarray = ["0", "0"];
        var modeltoggle = 0;

        $(document).ready(function () {


            $(".nav-tabs a").click(function () {
                $(this).tab('show');
            });



            $('#fromdatepicker').datepicker({
                format: 'dd/M/yyyy'

            });


            $('#todatepicker').datepicker({
                format: 'dd/M/yyyy'

            });
            HideWaitingSymbol();
            SetDiscountLabel();
            //ready for party

            var checkUrl = '@Url.Action("getAllArea", "Admin")';

            GetAllAreaById(checkUrl, 1);

            GetAllAreaById(checkUrl, 2);

            GetAllAreaById(checkUrl, 3);

            GetAllAreaById(checkUrl, 4);

            GetAllAreaById(checkUrl, 5);

            GetAllAreaById(checkUrl, 6);

            //GetAllAreaById(checkUrl, 7);

            GetAllAreaById(checkUrl, 8);

            //ready for item

            var checkUrl = '@Url.Action("getAllItem", "Scheme")';

            GetAllItemById(checkUrl, 2);

            GetAllItemById(checkUrl, 3);

            GetAllItemById(checkUrl, 4);

            GetAllItemById(checkUrl, 5);
           // alert(formatDate($('#From_Date').val());


            debugger;
            $('#From_Date').val(formatDate($('#From_Date').val()));
            $('#To_Date').val(formatDate($('#To_Date').val()));


            $('#chkSelectAllScheme').click(function () {
                var checkedStatus = this.checked;
                $('#SchemeSlabDetailList tbody tr').find('td:first :checkbox').each(function () {
                    $(this).prop('checked', checkedStatus);
                });
            });

            if ($('#SchemeSlabDetailList tbody tr').length == 0)
            {
                $('#SchemeSlabDetailList tbody').remove();
                $('#SchemeSlabDetailList thead').after("<tbody><input type='hidden' value=1 id='SchemeDetailCount' name = 'SchemeDetailCount' /><tr>" +
                    "<td><input type='hidden' id='Scheme_Id_1' name='Scheme_Id_1' /></td ><td><input type='textbox' onchange= 'return CheckValidMinQty(this);' class='form-control numberinput' id=Min_Qty_1 name = Min_Qty_1  /></td>" +
                    "<td><input type='textbox' class='form-control numberinput' id=Min_Item_1 name = Min_Item_1 onchange='return CheckValidMinItem(this);' /></td>" +
                    "<td><select class=form-control id=X_Factor_1 name = X_Factor_1><option>--Select--</option><option value=Y>Y</option><option value=N>N</option></td>" +
                    "<td><input type='textbox' class='form-control decimalinput' id=Discount_or_rate_Qty_1 name = Discount_or_rate_Qty_1 /></td>" +
                    "<td><input type='textbox' class='form-control' id=Reamrks_1 name = Reamrks_1 /></td></tr></tbody>");
            }


            if (new Date($('#From_Date').val()) > new Date($('#To_Date').val())) {
                alert("From date should be smaller than to date");
            }

            $('#btnaddrow').on('click', function () {
                var validate = CheckAggregate();
            if (validate) {
                numrows = numrows + 1;
                serialnumber = serialnumber + 1;
                rowsarray[numrows] = "0";
                var table = document.getElementById("SchemeSlabDetailList");
                var rowCount = table.rows.length;
                var row = table.insertRow(rowCount);
                row.id = "Scheme_" + numrows;

                var cell1 = row.insertCell(0);
                var element0 = document.createElement("input");
                element0.type = "checkbox";
                var element1 = document.createElement("input");
                element1.type = "hidden";
                //element2.className = "form-control number";
                element1.name = "Scheme_Id_" + numrows;
                element1.id = "Scheme_Id_" + numrows;
                cell1.appendChild(element0);
                $(element0).append(element1);
                cell1.align = "center";
                //cell1.innerHTML = serialnumber;
                //cell1.className = "tdgridnew1";

                var cell2 = row.insertCell(1);
                var element2 = document.createElement("input");
                element2.type = "text";
                element2.className = "form-control numberinput";
                element2.name = "Min_Qty_" + numrows;
                element2.id = "Min_Qty_" + numrows;
                element2.setAttribute("onchange", "return CheckValidMinQty(this)");
                cell2.append(element2);
                //cell2.className = "tdgridnew1";

                var cell3 = row.insertCell(2);
                var element3 = document.createElement("input");
                element3.type = "text";
                element3.className = "form-control numberinput";
                element3.name = "Min_Item_" + numrows;
                element3.id = "Min_Item_" + numrows;
                element3.setAttribute("onchange", "return CheckValidMinItem(this)");
                cell3.append(element3);



                var ddl = $('#X_Factor_1').clone(true);

                var celldv = row.insertCell(3);
                ddl[0].id = "X_Factor_" + numrows;
                ddl[0].name = "X_Factor_" + numrows;
                celldv.append(ddl[0]);

                var cell4 = row.insertCell(4);
                var element4 = document.createElement("input");
                element4.type = "text";
                element4.className = "form-control decimalinput";
                element4.name = "Discount_or_rate_Qty_" + numrows;
                element4.id = "Discount_or_rate_Qty_" + numrows;
                cell4.append(element4);
                //cell4.className = "tdgridnew1";

                var cell5 = row.insertCell(5);
                var element5 = document.createElement("input");
                element5.type = "text";
                element5.className = "form-control";
                element5.name = "Reamrks_" + numrows;
                element5.id = "Reamrks_" + numrows;
                cell5.append(element5);
                //cell5.className = "tdgridnew1";

                document.getElementById("SchemeDetailCount").value = numrows;
                //CheckAggregate();
            }
            else {
               // CheckAggregate();
            }
            });

            ValidateSchemeDetailInput();
            ValidateItemDetailInput();


            if ('@Model.ButtonActionName' == 'View') {
                DisableAllControl();
            }


        });

        function CheckAggregate() {

            valid = true;

            var mtable = document.getElementById("SchemeSlabDetailList");
            var mrowCount = document.getElementById("SchemeDetailCount").value;

            var arr = new Array();
            for (var i = 1; i <= mrowCount; i++) {
                var aagrid = document.getElementById("X_Factor_" + i);
                if (aagrid != undefined) {
                    var prop = { Name: document.getElementById("X_Factor_" + i).value, Index: i };
                    arr.push(prop);
                }
            }
            for (var i = 1; i <= mrowCount; i++) {
                var newcheckboxtd = document.getElementById("Scheme_Id_" + i);
                var newminqty = document.getElementById("Min_Qty_" + i);
                var newminitem = document.getElementById("Min_Item_" + i);
                var ddltd = document.getElementById("X_Factor_" + i);
                var newdiscountrateqty = document.getElementById("Discount_or_rate_Qty_" + i);
                var newreamrks = document.getElementById("Reamrks_" + i);

                if (ddltd != undefined) {

                    if (ddltd.value == "") {
                        if (i >= 1) {
                            alert('please select x factor');
                            $('#X_Factor_' + i).focus();
                            valid = false;
                        }


                    }
                }

                if (newminqty != undefined && newminqty.value == "") {
                    if (i >= 1) {
                        alert('please enter min qty');
                        $('#Min_Qty_' + i).focus();
                        valid = false;
                    }

                }

                if (newminitem != undefined && newminitem.value == "") {
                    if (i >= 1) {
                        alert('please enter min item');
                        $('#Min_Item_' + i).focus();
                        valid = false;
                    }

                }

                if (newdiscountrateqty != undefined && newdiscountrateqty.value == "") {
                    if (i >= 1) {
                        alert('please enter discount rate or qty');
                        $('#Discount_or_rate_Qty_' + i).focus();
                        valid = false;
                    }

                }

                if (newreamrks != undefined && newreamrks.value == "") {
                    if (i >= 1) {
                        alert('please enter remarks');
                        $('#Reamrks_' + i).focus();
                        valid = false;
                    }

                }
                 //textbox data
            }




            return valid;

        }

        /*$(":input").blur(function () {
        CheckValidation();
        });*/

        //$("#SchemeSlabDetailList").on('blur', 'input[type=text], select', function () {

        //    CheckAggregate();
        //});

        function ValidateSchemeDetailInput() {
            $('#SchemeSlabDetailList tbody tr td').on('keyup keypress', function () {
                var intRegex = /\D/g;
                if ($(this).find('input[type="textbox"]').hasClass('number')) {
                    if (intRegex.test($(this).find('input[type="textbox"]').val())) {
                        alert("Please enter number");
                        $(this).find('input[type="textbox"]').attr('value', '');
                        $(this).find('input[type="textbox"]').val('');
                        return true;
                    }
                }
            });
        }

        function ValidateItemDetailInput() {
            $('#itemTbl tbody tr td').eq(3).on('keyup', function () {
                var intRegex = /\D/g;
                if ($(this).find('input[type="textbox"]').hasClass('number')) {
                    if (intRegex.test($(this).find('input[type="textbox"]').val())) {
                        alert("Please enter number");
                        $(this).find('input[type="textbox"]').attr('value', '');
                        $(this).find('input[type="textbox"]').val('');
                        return true;
                    }
                }
            });
        }

        function CheckValidMinQty(obj) {
            debugger;
            ValidateSchemeDetailInput();
            //var Valid = true;
            var TotalMinQty = 0;
            if ($("#hdnSelectedIGroup").val() != '') {
                $('#itemTbl').find('input[type="text"]').each(function () {
                    TotalMinQty += Number($(this).val());
                });
                $.ajax({
                    url: '@Url.Action("CheckValidMinItemqty", "Scheme")',
                    type: "GET",
                    dataType: "JSON",

                    data: { ItemGroupIds: $("#hdnSelectedIGroup").val() },
                    success: function (result) {
                        TotalMinQty = TotalMinQty + parseInt(result);
                        if (TotalMinQty > obj.value) {
                            alert("Minimum quantity should be equal or greater then " + TotalMinQty);
                            $(obj).val('');
                            Valid = false;
                            return valid;
                        }

                    },
                    error: function (result) {
                        console.log(result);
                    }
                })
            }
            else {
                $('#itemTbl').find('input[type="text"]').each(function () {
                    TotalMinQty += Number($(this).val());
                });
                if ($('#itemTbl tbody tr').length == 1 && $('#itemTbl').find('input[type="textbox"]').val() == 0 && $(obj).val() == 0) {
                    $(obj).val(1);
                }
                else {
                    if (TotalMinQty > obj.value) {
                        alert("Minimum quantity should be equal or greater then " + TotalMinQty);
                        $(obj).val('');
                        Valid = false;
                        return valid;
                    }
                }
            }
        }

        function CheckValidateDate() {
            if ($('#From_Date').val() != "" && $('#To_Date').val() != "") {
                if (new Date($('#From_Date').val()) > new Date($('#To_Date').val())) {
                    alert("From date should be smaller then to date")
                    $('#From_Date').val('');
                    $('#To_Date').val('');
                }
            }
        }

        function CheckSchemeValidation() {
            //var valid = true;
            
            var cntdlr = 0;
            var cntitm = 0;
            $('#dealerTbl tbody tr').each(function (i, tr) {
                if ($(tr).find("td:nth-child(2)").text() != '') {
                    cntdlr = cntdlr + 1;
                }
            });
            $('#itemTbl tbody tr').each(function (i, tr) {
                 
                if ($(tr).find("td:nth-child(2)").text() != '') {
                    cntitm = cntitm + 1;
                }
            });

            debugger;
            if (cntdlr == 0 && $("#hdnSelectedPGroup").val() == '') {
                alert("Please add atleast one channel partner or one party group");
                valid = false;
            }
            else if (cntitm == 0 && $('#hdnSelectedIGroup').val() == '') {
                alert("Please add atleast one Part or one Item Group");
                valid = false;
            }
            else if ($('#SchemeSlabDetailList').find('tbody').length == 0 || $('#SchemeSlabDetailList').find('tbody tr').length == 0) {
                alert("Please add atlaest one scheme detail");
                valid = false;
            }
            else {
                valid = CheckAggregate();
                if (valid) {
                    
                        valid = DealerPartValidation();
                        modeltoggle == 1 ? valid = false : valid = true;
                     
                }
            }
            if (valid) {
                if (cntdlr >0) {
                    valid = CheckPartyValidation();
                }
                if (valid) {
                    if (cntitm>0) {
                        valid = CheckItemValidation();
                    }
                }
            }
            return valid;
        }

        function CheckValidMinItem(obj)
        {
            ValidateItemDetailInput();
            var IGcnt = 0;
            var pcnt = 0;            
            var ct = 0;
            var igct = 0;
            if ($("#hdnSelectedIGroup").val() != '') {
                $('#itemTbl tbody tr').each(function (i, tr) {

                    if ($(tr).find("td:nth-child(2)").text() != '') {
                        igct = igct + 1;
                    }
                     
                });
                $.ajax({
                    url: '@Url.Action("CheckValidMinItem", "Scheme")',
                    type: "GET",
                    dataType: "JSON",
                     
                    data: { ItemGroupIds: $("#hdnSelectedIGroup").val() },
                    success: function (result) {
                        igct = igct + parseInt(result);
                        if (igct < $(obj).val()) {
                            alert("Minimum item should be equal or lesser then " + igct);
                            $(obj).val('');
                            Valid = false;
                        }
                       // return result;
                         
                    },
                    error: function (result) {
                        console.log(result);
                    }
            });

                //var c = itmcnt();
                 
                //if (typeof c != 'undefined') {
                //    igct = igct + c; 

                    
                //}
                //alert(igct);
                //if (igct > 0) {
                //    if (igct < $(obj).val()) {
                //        alert("Minimum item should be equal or lesser then " + ct);
                //        $(obj).val('');
                //        Valid = false;
                //    }
                //}
                
            }
            else {
                if ($('#itemTbl tbody tr').length == 1 && $('#itemTbl').find('input[type="textbox"]').val() == 0 && $(obj).val() == 0) {
                    $(obj).val(1);
                }
                $('#itemTbl').find('input[type="text"]').each(function () {

                    ct++;

                });
                if (ct < $(obj).val()) {
                    alert("Minimum item should be equal or lesser then " + ct);
                    $(obj).val('');
                    Valid = false;
                }
            }


            return valid;
        }


        function removeCheckedScheme() {
            if ($('#SchemeSlabDetailList tbody tr').length > 1) {
                $('#SchemeSlabDetailList tbody').find('tr').each(function () {
                    if ($(this).find('td:first').find('input[type="checkbox"]').is(':checked')) {
                        $(this).remove();
                    }
                });
                $('#SchemeDetailCount').prop('value', $('#SchemeSlabDetailList tbody tr').length);
            }
            else {
                alert("Atleast one row is required");
            }
        }

        function checkAllchekBoxs(obj) {
            var status = obj.checked;
            debugger;
            $('input[name="tblChekboxes"]').each(function () {
            this.checked = status;
            });
        }

        function DealerPartValidation() {

            var DealerIds = $('#dealerTbl tbody tr').find('td:first').map(function () {
                return $(this).find('input[type="hidden"]').val();
            }).get().join(",");
            var ItemIds = $('#itemTbl tbody tr').find('td:first').map(function () {
                return $(this).find('input[type="hidden"]').val();
            }).get().join(",");
            //var valid = true;
            SetDiscountLabel();
            var ApplyonId = Number($('#Apply_on_Id').val());
            if (ApplyonId != "" && DealerIds != "" && ItemIds != "") {

                $.ajax({
                    url: '@Url.Action("CheckDealerPartExistValidation", "Scheme")',
                    type: "GET",
                    dataType: "JSON",
                    data: { ApplyonId: ApplyonId, DealerIds: DealerIds, ItemIds: ItemIds },
                    success: function (result) {
                        if (result != "" && result != null && result != "[]") {
                            $('.modal-title').text('You can not create new scheme due to these parts are already exists');
                            var table = "<div class='card-body'><div class='panel panel-default'><div class='col-sm-12 col-md-12'><table id='dealerpartexist' class='table table-striped table-bordered dt-responsive nowrap' style='width: 100%'>" +
                                "<thead class='thead-lights'><tr><th>Scheme Code</th><th>CHANNEL PARTNER CODE</th><th>Part Code</th></tr></thead><tbody>";

                            $.each(JSON.parse(result), function (i, data) {
                                table += "<tr><td>" + data.SchemeCode + "</td><td>" + data.DealerCode + "</td><td>" + data.PartNumber + "</td></tr>";
                            });
                            $(table).append("</tbody></table></div></div></div>");
                            $('.modal-body').html(table);
                            $('#myModal').modal('show');
                            valid = false;
                            modeltoggle = 1;
                        }
                        return valid;
                    },
                    error: function (result) {
                        console.log(result);
                    }
                });
                return valid;
            }
            else {
                return valid;
            }
            return valid;

        }


          function AddItem() {
              var lennumber = $("#itemloopcount").val();
            var url = '@Url.Action("GetAllItemDtlByFilterId", "Scheme")';
            AddItemData(lennumber, url)
        }

          function AddParty() {
              var len = $("#partyloopcount").val();
            var url ='@Url.Action("GetAllPartyDtlByFilterId", "Scheme")';
            AddPartyData(len, url)
        }

        function ValidateSchemeNameExist(obj) {
            var schemename = $(obj).val();
            var schemeId = $('#selectedSchemeId').val();

            $.ajax({
            type: "POST",
            contentType: "application/json; charset=utf-8",
                url: '@Url.Action("CheckIsSchemeNameExist", "Scheme")',
                data: JSON.stringify({ schemename: schemename, schemeId: schemeId }),
            dataType: "json",
            success: function (data) {
                if (data == true) {
                    alert("Scheme Name already exists");
                    $('#SchemeName').val('');
                    $('#SchemeName').focus();
                }
            },
            error: function (data) {
                // throw ex;
            }

            });
        }



        function DisableAllControl() {
            $('#SCFormId').find("input, textarea, select").attr("disabled", true);
            $('input type[search]').attr("disabled", false);
            debugger;
            $('.btn').hide();
            $('.fa-trash').hide();
            $('.hideonview').hide();
            $('.areachosen-select').attr("disabled", "disabled").trigger('chosen:updated');
            $('.itmgroup').attr("disabled", "disabled").trigger('chosen:updated');
            $('.dataTables_wrapper').find("input, textarea, select").attr("disabled", false);
        }

        function SetDiscountLabel() {

            var ApplyonId = Number($('#Apply_on_Id').val());

            if (ApplyonId == 1) {
                $('#dislabelhdr').text('Discount %');
                $('#dislabelminhdr').text('MIN QTY');
            }
            else if (ApplyonId == 2) {
                $('#dislabelhdr').text('Discount %');
                $('#dislabelminhdr').text('MIN VALUE');

            }
            else if (ApplyonId == 3) {
                $('#dislabelhdr').text('Discount Amount Per Qty');
                $('#dislabelminhdr').text('MIN QTY');
            }
            else if (ApplyonId == 4) {
                $('#dislabelhdr').text('Discount Amount');
                $('#dislabelminhdr').text('MIN VALUE');
            }
            else if (ApplyonId == 5) {
                $('#dislabelhdr').text('Free Qty');
                $('#dislabelminhdr').text('MIN QTY');
            }
        }

        function Clear() {
            location.reload();

        }


        function itmcnt() {
            var IGcnt = 0;
          
             
                $.ajax({
                    url: '@Url.Action("CheckValidMinItem", "Scheme")',
                    type: "GET",
                    dataType: "JSON",
                     
                    data: { ItemGroupIds: $("#hdnSelectedIGroup").val() },
                    success: function (result) {
                        
                        return result;
                         
                    },
                    error: function (result) {
                        console.log(result);
                    }
            });

            
            
        }
    </script>
}


