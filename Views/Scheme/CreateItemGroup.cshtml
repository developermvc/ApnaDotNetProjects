@model LumaxDMS.Models.ItemGroupModel
@using LumaxDMS.AppCode
@{
    ViewBag.Title = "CreateItemGroup";
    int i = 0;
}
@section CSS
{
    <link href="/Content/AutoCompleteCSS/chosen.css" rel="stylesheet" type="text/css" />
}

@using (Html.BeginForm("CreateItemGroup", "Scheme", FormMethod.Post, new { }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.User_Id, new { @Id = "selectedUserId" })
    @Html.HiddenFor(m => m.ItemGrpHDR_Id, new { @Id = "selectedItemgroupId" })
    <input type="hidden" name="itemloopcount" id="itemloopcount" />
    <div>
        @Html.Partial("_WaitModal")
        <div class="card card_ps">
            <div class="panel panel-default">
                <div class="header_ps">
                    @if (Model.ActionName == Constants.BTN_CREATE)
                    {
                        <span>CREATE ITEM GROUP</span>
                    }
                    else
                    {
                        <span>UPDATE ITEM GROUP </span>
                    }
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-lg-2 col-xs-12">
                            <label for="pwd">
                                Item Group Code:
                            </label>
                        </div>
                        <div class="col-lg-2 col-xs-12">
                            @Html.TextBoxFor(model => model.ItemGRPCode, new { @class = "form-control disabled", id = "txtItemGroupCode", disabled = "disabled" })
                            @Html.HiddenFor(model => model.ItemGrpHDR_Id)
                        </div>
                        <div class="col-lg-2">
                            <label for="pwd" class="redlabel">
                                Item Group Name:
                            </label>
                        </div>
                        <div class="col-lg-2">
                            @Html.TextBoxFor(model => model.ItemGRPName, new { @class = "form-control", id = "txtItemGroupName", onblur = "return IsItemGrpExist(this)" })
                            @Html.ValidationMessageFor(model => model.ItemGRPName)
                        </div>
                        <div class="col-lg-2 col-xs-12">
                            <label for="pwd"  class="redlabel">
                                Item Group Description:
                            </label>
                        </div>
                        <div class="col-lg-2 col-xs-12">
                            @Html.TextBoxFor(model => model.ItemGRPDesc, new { @class = "form-control", id = "txtItemGroupDesc" })
                            @Html.ValidationMessageFor(model => model.ItemGRPDesc)
                        </div>
                    </div>
                    <div class="row row_pt">
                        <div class="col-lg-2 col-xs-12">
                            <label for="pwd">
                                Status:
                            </label>
                        </div>
                        <div class="col-lg-2 col-xs-12">
                            @Html.CheckBoxFor(model => model.IsActive)
                        </div>
                    </div>
                    <hr />
                    @{Html.RenderPartial("AddItemFilter", Model);}
                    <hr />
                    <div class="col-sm-12 col-md-12">
                        <input type="hidden" name="ITEMID[]" id="ITEMIDARR">
                        <input type="hidden" name="ITEMQTYARR[]" id="ITEMQTYARR">

                        <table id="itemTbl" class=" table table-striped table-bordered dt-responsive nowrap dataTable no-footer dtr-inline">
                            <thead class="thead-lights">
                                <tr>
                                    <th>
                                        <input name="cballItem" value="1" id="cballItem" type="checkbox" />
                                        <a href="##" id="removeallItem" title="Remove Checked Rows"><i class="fa fa-trash bg_red"></i></a>
                                    </th>
                                    <th>
                                        Item Code
                                    </th>
                                    <th>
                                        Item PART CODE
                                    </th>
                                    <th>
                                        Item Description
                                    </th>
                                    @*<th>
                                        Item Family
                                    </th>*@
                                    <th>
                                        Sub Category
                                    </th>
                                    <th>
                                        Product Category
                                    </th>
                                    <th>
                                        Segment
                                    </th>


                                    <th>
                                        Min Qty
                                    </th>
                                </tr>
                            </thead>
                            @if (Model.ItemGroupDetailList != null)
                            {
                                <tbody>

                                    @foreach (var item in Model.ItemGroupDetailList)
                                    {
                                        { i = i + 1; }
                                        <tr id="ItemRow_@i">
                                            <td>
                                                <input type='checkbox' id="Itemcb_@i" name="Itemcb_[]" />
                                            </td>
                                            <td>
                                                @item.SAP_PartNumber
                                                @Html.HiddenFor(m => item.PART_ID, new { @Id = "PART_ID_" + i })
                                            </td>
                                            <td>
                                                @item.PartNumber
                                            </td>
                                            <td>
                                                @item.PartDescription
                                            </td>
                                            @*<td>
                                                @item.PartFamilyName
                                            </td>*@
                                            <td>
                                                @item.SubcategoryName
                                            </td>
                                            <td>
                                                @item.ProductCategoryName
                                            </td>
                                            <td>
                                                @item.SegmentName
                                            </td>


                                            <td class="td_width">
                                                @Html.TextBoxFor(m => item.MIN_QTY, new { @class = "form-control", @Id = "MINQTY_" + i })
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            }
                        </table>
                    </div>
                    <br />
                    <div class="col-md-12">
                        <div class="row botton_tppp">
                            <div class="col-lg-12  text-right margin_lf ">
                                @if (Model.ActionName == Constants.BTN_CREATE)
                                {
                                    <input type="submit" name="btntype" value="Create" id="btnadd" class="btn btn_font" onclick="return CheckItemValidation();" />
                                }
                                else if (Model.ActionName == Constants.BTN_EDIT)
                                {

                                    <input type="submit" class="btn btn_font" name="btntype" value="Update" id="btnupdate" onclick="return CheckItemValidation();" />
                                }
                                <input type="reset" class="btn btn_font" name="btntype" value="Clear" onclick="return Clear();" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}



@section JS
{

    <script src="~/Scripts/ProjectJS/C_ItemJS.js"></script>
    <script src="/Scripts/ProjectJS/ItemGroupJS.js" type="text/javascript"></script>
    <script type="text/javascript">
        var t = $('#itemTbl').DataTable();

    $(document).ready(function () {
        HideWaitingSymbol();

       $('#itemloopcount').val('@i');

        var checkUrl = '@Url.Action("getAllItem", "Scheme")';

        GetAllItemById(checkUrl, 2);

        GetAllItemById(checkUrl, 3);

        GetAllItemById(checkUrl, 4);

        GetAllItemById(checkUrl, 5);

        GetAllItemById(checkUrl, 6);

    });

        function IsItemGrpExist() {
            var url='@Url.Action("IsItemGrpExist", "Scheme")';
            IsItemGrpExistData(url)
        }


        function AddItem() {
            var lennumber = '@i';
            var url = '@Url.Action("GetAllItemDtlByFilterId", "Scheme")';
            AddItemData(lennumber, url)
        }


        function Clear() {
            window.location.href = "/Scheme/CreateItemGroup"+ "@Constants.HASH_SCHEME";
        }
    </script>
}
