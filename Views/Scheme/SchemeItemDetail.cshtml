@model LumaxDMS.Models.SchemeApplicatorModel

@{
    var counter = 1;
}

@section CSS
{
    <link href="/Content/AutoCompleteCSS/chosen.css" rel="stylesheet" type="text/css" />
}
<div class="row">
    <div class="col-lg-2">
        <label for="UserCode">
            Segment:
        </label>
    </div>
    <div class="col-lg-2">
        @Html.DropDownListFor(m => m.Segment_Id, new SelectList(Model.SegmentList, "Segment_Id", "SegmentName"), "-- Select--", new { @class = "form-control", @onchange = "return GetProductCategoryOnSegmentId(this);" })
    </div>
    <div class="col-lg-2">
        <label for="pwd">
            Product Category:
        </label>
    </div>
    <div class="col-lg-2">
        @Html.DropDownListFor(m => m.ProductCategory_Id, new SelectList(Model.ProductCategoryList, "ProductCategory_Id", "ProductCategoryName"), "-- Select--", new { @class = "form-control", @onchange = "return GetSubCategoryOnProductCategoryId(this);" })
    </div>
    <div class="col-lg-2">
        <label for="pwd">
            Sub - Category:
        </label>
    </div>
    <div class="col-lg-2">
        @Html.DropDownListFor(m => m.SubCategory_Id, new SelectList(Model.SubCategoryList, "SubCategory_Id", "SubCategoryName"), "-- Select--", new { @class = "form-control", @onchange = "return GetPartFamilyOnSubCategoryId(this);" })
    </div>
</div>
<div class="row row_pt">

    <div class="col-lg-2">
        <label for="pwd">
            Part Family:
        </label>
    </div>
    <div class="col-lg-2">
        @Html.DropDownListFor(m => m.PartFamily_Id, new SelectList(Model.PartFamilyList, "PartFamily_Id", "PartFamilyName"), "-- Select--", new { @class = "form-control", @onchange = "return GetPartOnPartFamilyId(this);" })
    </div>
    <div class="col-lg-2 col-xs-12">
        <label for="pwd">
            Part:
        </label>
    </div>
    <div class="col-lg-2 col-xs-12">
        @Html.DropDownListFor(m => m.Part_Id, new SelectList(Model.PartList, "Part_Id", "PartNumber"), "-- SELECT--", new { @class = "chosen-select" })
    </div>
    <div class="col-lg-2 col-xs-12">
        <label for="pwd">
            Group:
        </label>
    </div>
    <div class="col-lg-2 col-xs-12">
        @Html.DropDownListFor(m => m.ItemGrpHDR_Id, new SelectList(Model.ExistingItemGroupList, "ItemGrpHDR_Id", "ItemGRPName"), "-- Select--", new { @class = "form-control", @Name = "ItemGroupHDR_Id", @id = "ItemGroupHDR_Id" })
    </div>
</div>

<br />
<div class="col-md-12">
    <div class="row botton_tppp">
        <div class="col-lg-12  float-left">
            <input type="button" class="btn btn-primary" name="btnadd" value="Add" onclick="return AddItem();" />
        </div>
    </div>
</div>
<hr />
<div class="container custom-datable">
    <div class="card-body">
        <div class="panel panel-default">
            <div class="col-sm-12 col-md-12">
                <table id="ItemList" class="table table-striped table-bordered dt-responsive nowrap"
                       style="width: 100%">
                    <thead class="thead-lights">
                        <tr>
                            <th style="width:15%;">
                                <input type="checkbox" id="chkSelectAll" class="pull-left" />
                                <a href="#" onclick="return removeChecked();" title="Remove Checked Rows"><i class="fa fa-trash bg_red"></i></a>
                                @*<a href="#" onclick="return removeChecked();"  title="Remove Checked Rows" >Remove</a>*@
                            </th>
                            <th>
                                Item Code
                            </th>
                            <th>
                                Item Name
                            </th>
                            <th>
                                Item Family
                            </th>
                            <th>
                                Min Qty
                            </th>
                        </tr>
                    </thead>
                    @if (Model.SchemeItemDetailList != null)
                    {
                        <tbody>
                            @Html.Hidden("ItemDetailCount", Model.SchemeItemDetailList.Count, new { @Name = "ItemDetailCount" })
                            @foreach (var item in Model.SchemeItemDetailList)
                            {
                                <tr>
                                    <td>
                                        <input type='checkbox' /> &nbsp;
                                        @Html.HiddenFor(m => item.ITEM_ID, new { @Name = "PartId_" + counter })
                                    </td>
                                    <td>
                                        @item.SAP_PartNumber
                                    </td>
                                    <td>
                                        @item.PartDescription
                                    </td>
                                    <td>
                                        @item.PartFamilyName
                                    </td>
                                    <td class="td_width">
                                        @Html.TextBoxFor(m => item.MIN_QTY, new { @class = "form-control number", @Name = "MinQty_" + counter })
                                    </td>
                                </tr>
                                counter++;
                            }
                        </tbody>
                    }
                </table>
            </div>
        </div>
    </div>
</div>

@section JS
{
    <script src="/Content/AutoCompleteJS/chosen.jquery.js" type="text/javascript"></script>
    <script src="/Scripts/ProjectJS/ItemGroupJS.js" type="text/javascript"></script>
    <script type="text/javascript">

        $(document).ready(function () {
            $(".chosen-select").chosen();
            $('#chkSelectAll').click(function () {
                var checkedStatus = this.checked;
                $('#ItemList tbody tr').find('td:first :checkbox').each(function () {
                    $(this).prop('checked', checkedStatus);
                });
            });
    });

    function removeChecked() {
            $('#ItemList tbody').find('tr').each(function () {
                if ($(this).find('td:first').find('input[type="checkbox"]').is(':checked')) {
                    $(this).remove();
                }
            });
            $('#ItemDetailCount').prop('value', $('#ItemList tbody tr').length);
        }

        function GetProductCategoryOnSegmentId(obj) {
            bindProductCategoryOnSegmentId(obj.value, '@Url.Action("GetProductCategoryOnSegmentId", "Scheme")');
        }

        function GetSubCategoryOnProductCategoryId(obj) {
            bindSubCategoryOnProductCategoryId(obj.value, '@Url.Action("GetSubCategoryOnProductCategoryId", "Scheme")')
        }

        function GetPartFamilyOnSubCategoryId(obj) {
            bindPartFamilyOnSubCategoryId(obj.value, '@Url.Action("GetPartFamilyOnSubCategoryId", "Scheme")');
        }

        function GetPartOnPartFamilyId(obj) {
            bindPartOnPartFamilyId(obj.value, '@Url.Action("GetPartOnPartFamilyId", "Scheme")');
        }

        function AddItem() {
            var segmentId = $('#Segment_Id').val() == "" ? 0 : $('#Segment_Id').val();
            var productCategoryId = $('#ProductCategory_Id').val() == "" ? 0 : $('#ProductCategory_Id').val();
            var subCategoyId = $('#SubCategory_Id').val() == "" ? 0 : $('#SubCategory_Id').val();
            var PartFamilyId = $('#PartFamily_Id').val() == "" ? 0 : $('#PartFamily_Id').val();
            var PartId = $('#Part_Id').val() == "" ? 0 : $('#Part_Id').val();
            var GroupId = $('#ItemGroupHDR_Id').val() == "" ? 0 : $('#ItemGroupHDR_Id').val();
            var url = '@Url.Action("AddItemList", "Scheme")';
            if ($('#ItemList tbody tr').length ==0)
            {
                $('#ItemList tbody').remove();
            }
            bindItem(segmentId, productCategoryId, subCategoyId, PartFamilyId, PartId, GroupId, url);

    }

    </script>
}
