@model LumaxDMS.Models.SchemeApplicatorModel
@using LumaxDMS.AppCode
@{
    ViewBag.Title = "CreateSchemeApproval";
    var counter = 1;
}


@section CSS
{
    <link href="/Content/AutoCompleteCSS/chosen.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/css/bootstrap-datepicker.css" rel="stylesheet" />
}
@using (Html.BeginForm("CreateSchemeApproval", "Scheme", FormMethod.Post, new { @Id = "SCFormId" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.Scheme_Id)
    @Html.HiddenFor(m => m.hdnSelectedIGroup)
    @Html.HiddenFor(m => m.hdnSelectedPGroup)
    <div>
        @{Html.RenderPartial("_Message", Model);}
        <div class="card card_ps">
            <div class="panel panel-default">
                <div class="header_ps">
                    <span>SCHEME APPROVAL</span>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-lg-2 col-xs-12">
                            <label for="pwd">
                                Scheme Code:
                            </label>
                        </div>
                        <div class="col-lg-2 col-xs-12">
                            @Html.TextBoxFor(model => model.SchemeCode, new { @class = "form-control", disabled = "disabled" })
                            @Html.HiddenFor(model => model.Scheme_Id)
                        </div>
                        <div class="col-lg-2">
                            <label for="pwd">
                                Scheme Name:
                            </label>
                        </div>
                        <div class="col-lg-2">
                            @Html.TextBoxFor(model => model.SchemeName, new { @class = "form-control", disabled = "disabled" })
                            @Html.ValidationMessageFor(model => model.SchemeName)
                        </div>
                        <div class="col-lg-2 col-xs-12">
                            <label for="pwd">
                                Applicable On:
                            </label>
                        </div>
                        <div class="col-lg-2 col-xs-12">
                            @Html.DropDownListFor(m => m.Apply_on_Id, new SelectList(Model.SchemeApplyList, "Apply_on_ID", "Apply_on_Name"), "-- Select--", new { @class = "form-control", disabled = "disabled", @onchange = "return DealerPartValidation();" })
                            @Html.ValidationMessageFor(model => model.Apply_on_Id)
                        </div>
                    </div>
                    <div class="row row_pt">
                        <div class="col-lg-2 col-xs-12">
                            <label for="pwd">
                                From Date:
                            </label>
                        </div>
                        <div class="col-lg-2 col-xs-12">
                            @*<div class="input-group date" id="datetimepicker1">*@
                            @*<div class="input-group date" data-provide="datepicker">*@
                            @Html.TextBoxFor(@model => model.From_Date, new { @class = "form-control datepicker", name = "From_Date", disabled = "disabled", @onchange = "return CheckValidateDate();" })
                            @Html.ValidationMessageFor(model => model.From_Date)
                            @*<span class="input-group-append input-group-addon">
                                    <span class="glyphicon glyphicon-calendar"></span>
                                </span>*@
                            @*<div class="input-group-addon">
                                    <span class="glyphicon glyphicon-th"></span>
                                </div>*@
                            @*</div>*@
                            @*</div>*@
                        </div>
                        <div class="col-lg-2 col-xs-12">
                            <label for="pwd">
                                To Date:
                            </label>
                        </div>
                        <div class="col-lg-2 col-xs-12">
                            @Html.TextBoxFor(model => model.To_Date, new { @class = "form-control datepicker", disabled = "disabled", @onchange = "return CheckValidateDate();" })
                            @Html.ValidationMessageFor(model => model.To_Date)
                        </div>
                        <div class="col-lg-2 col-xs-12">
                            <label for="pwd">
                                IsActive:
                            </label>
                        </div>
                        <div class="col-lg-2 col-xs-12">
                            @Html.CheckBoxFor(model => model.IsActive, new { disabled = "disabled" })
                        </div>
                    </div>
                    <div class="row row_pt">
                        <div class="col-lg-2">
                            <label for="pwd">
                                Approve Remarks:
                            </label>
                        </div>
                        <div class="col-lg-6">
                            @Html.TextAreaFor(model => model.Approve_Remarks, new { @class = "form-control", @rows = "4" })
                            @Html.ValidationMessageFor(model => model.Approve_Remarks)
                        </div>
                    </div>
                    <br />
                    <div class="container" style="font-size:12px">


                        <!-- Nav tabs -->
                        <ul class="nav nav-tabs" role="tablist">
                            <li class="nav-item">
                                <a class="nav-link active" style="font-size:inherit" data-toggle="tab" href="#customer">Party DETAIL</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" font-size:inherit" data-toggle="tab" href="#item">ITEM DETAIL</a>
                            </li>

                            <li class="nav-item">
                                <a class="nav-link" style="font-size:inherit" data-toggle="tab" href="#PGlist">PARTY GROUP</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" font-size:inherit" data-toggle="tab" href="#IGlist">ITEM GROUP</a>
                            </li>


                            <li class="nav-item">
                                <a class="nav-link" font-size:inherit" data-toggle="tab" href="#list">SCHEME DETAIL</a>
                            </li>

                        </ul>

                        <!-- Tab panes -->
                        <div class="tab-content">
                            <div id="customer" class="container tab-pane active">

                                <div class="panel-heading header_ps" style="padding:3px;"><span>Party Detail</span></div>

                                <div class="card-body">
                                    @{ Html.RenderPartial("SchemePartyDetail", Model);}
                                </div>
                            </div>

                            <div id="item" class="container tab-pane fade">

                                <div class="panel-heading header_ps" style="padding:3px;"><span>Item Detail</span></div>

                                <div class="card-body">
                                    @{ Html.RenderPartial("SchemeItemDetail", Model);}
                                </div>
                            </div>
                            @*//ADD 10_sep-2019*@
                            <div id="IGlist" class="container tab-pane fade">
                                <div class="col-md-12">
                                    <div class="panel-heading header_ps" style="padding:3px;"><span>Item Group Detail</span></div>
                                    <br />
                                    <div class="row">
                                        <div class="col-lg-2 col-xs-12">

                                            @Html.DropDownListFor(m => m.IGSelectedItemType, new SelectList(Model.ItemGroupTypeList, "Value", "Text"), new { @class = "form-control po_hdr " })
                                        </div>
                                        <div class="col-lg-10 col-xs-12">

                                            @Html.ListBoxFor(model => model.IGSelectedIds, new SelectList(Model.ItemGroupList, "AREAID", "AREANAME"), new { @Id = "lbItem_6", @Name = "sbItemGroup", @Class = "itemchosen-select itmgroup" })


                                        </div>
                                    </div>
                                    @*@{Html.RenderPartial("AddItemFilter", Model);}*@

                                </div>
                            </div>
                            <div id="PGlist" class="container tab-pane">
                                <div class="col-md-12">
                                    <div class="panel-heading header_ps" style="padding:3px;"><span>Party Group Detail</span></div>
                                    <br />
                                    <div class="row">
                                        <div class="col-lg-2 col-xs-12">
                                            @Html.DropDownListFor(m => m.PGSelectedAreaType, new SelectList(Model.PGAreaTypeList, "Value", "Text"), new { @class = "form-control po_hdr" })

                                        </div>
                                        <div class="col-lg-10 col-xs-12">


                                            @Html.ListBoxFor(model => model.PGSelectedIds, new SelectList(Model.PartyGroupList, "AREAID", "AREANAME", Model.C_SelectedIds), new { @Id = "lbArea_8", @Name = "sbPartyGroup", @Class = "avaiable_mcode areachosen-select pgroup" })

                                        </div>
                                    </div>
                                </div>





                            </div>
                            @*////*@

                            <div id="list" class="container tab-pane fade">

                                <div class="panel-heading header_ps" style="padding:3px;"><span>Scheme Detail</span></div>

                                <div class="card-body">
                                    <div class="panel panel-default">
                                        <div class="col-sm-12 col-md-12">
                                            <table id="SchemeSlabDetailList" class="table table-striped table-bordered dt-responsive nowrap"
                                                   style="width: 100%">
                                                <thead class="thead-lights">
                                                    <tr>
                                                        <th>
                                                            <input type="checkbox" disabled="disabled" id="chkSelectAllScheme" class="pull-left" />
                                                            <a href="#" onclick="return removeCheckedScheme();" title="Remove Checked Rows"><i class="fa fa-trash bg_red"></i></a>
                                                        </th>
                                                        <th>
                                                            Min Qty
                                                        </th>
                                                        <th>
                                                            Min Item
                                                        </th>
                                                        <th>
                                                            X_Factor
                                                        </th>
                                                        <th>
                                                            Discount_Rate_Or_Qty
                                                        </th>
                                                        <th>
                                                            Remarks
                                                        </th>
                                                    </tr>
                                                </thead>
                                                @if (Model.SchemeSlabDetailList != null)
                                                {
                                                    <tbody>
                                                        @Html.Hidden("SchemeDetailCount", Model.SchemeSlabDetailList.Count, new { @Name = "SchemeDetailCount" })
                                                        @foreach (var item in Model.SchemeSlabDetailList)
                                                        {
                                                            <tr>
                                                                <td>
                                                                    <input type="checkbox" disabled="disabled" />&nbsp;
                                                                    @Html.HiddenFor(m => item.SCHEME_ID, new { @id = "Scheme_Id_" + counter, @Name = "Scheme_Id_" + counter, disabled = "disabled" })
                                                                </td>
                                                                <td>
                                                                    @Html.TextBoxFor(m => item.MIN_QTY, new { @id = "Min_Qty_" + counter, @Name = "Min_Qty_" + counter, @class = "form-control number", disabled = "disabled", @onchange = "return CheckValidMinQty(this);" })
                                                                    @*@item.Min_Qty
                                                                        @Html.HiddenFor(m => item.Min_Qty, new { @Name = "Min_Qty_" + counter })*@
                                                                </td>
                                                                <td>
                                                                    @Html.TextBoxFor(m => item.MIN_ITEM, new { @id = "Min_Item_" + counter, @Name = "Min_Item_" + counter, @class = "form-control number", disabled = "disabled", @onchange = "return CheckValidMinItem(this);" })
                                                                    @*@item.Min_Item
                                                                        @Html.HiddenFor(m => item.Min_Item, new { @Name = "Min_Item_" + counter })*@
                                                                </td>
                                                                <td>
                                                                    @Html.DropDownListFor(m => item.X_FACTOR, new SelectList(Model.GetAllXFactorList, "Value", "Text", item.X_FACTOR), "-- Select--", new { @id = "X_Factor_" + counter, @Name = "X_Factor_" + counter, @class = "form-control", disabled = "disabled" })
                                                                    @*@Html.TextBoxFor(m => item.X_Factor, new { @Name = "X_Factor_" + counter, @class = "form-control" })*@
                                                                    @*@item.X_Factor
                                                                        @Html.HiddenFor(m => item.X_Factor, new { @Name = "X_Factor_" + counter })*@
                                                                </td>
                                                                <td>
                                                                    @Html.TextBoxFor(m => item.DISCOUNT_RATE_OR_QTY, new { @id = "Discount_or_rate_Qty_" + counter, @Name = "Discount_or_rate_Qty_" + counter, @class = "form-control number", disabled = "disabled" })
                                                                    @*@item.Discount_rate_or_Qty
                                                                        @Html.HiddenFor(m => item.Discount_rate_or_Qty, new { @Name = "Discount_or_rate_Qty_" + counter })*@
                                                                </td>
                                                                <td>
                                                                    @Html.TextBoxFor(m => item.REMARKS, new { @id = "Reamrks_" + counter, @Name = "Reamrks_" + counter, @class = "form-control", disabled = "disabled" })
                                                                    @*@item.Remarks
                                                                        @Html.HiddenFor(m => item.Remarks, new { @Name = "Reamrks_" + counter })*@
                                                                </td>
                                                            </tr>
                                                            counter++;
                                                        }
                                                    </tbody>
                                                }
                                            </table>
                                            <br />
                                            @*<div class="clearfix">
                                                    <input type="button" name="btntype" value="Add Row" disabled="disabled" id="btnaddrow" class="btn btn-primary" />
                                                </div>*@
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        @*<div class="col-md-12">*@

                        @*</div>*@
                    </div>
                </div>
                <div class="card-footer">
                    <div class="clearfix">
                        <div class="float-right">
                            @if (Model.SchemeStatus != 6)
                            {
                                <input type="submit" name="btntype" value="Approve" id="btnadd" class="btn btn-primary" onclick="return CheckValidation();" />
                                <input type="submit" class="btn btn-primary" name="btntype" value="Reject" onclick="return CheckValidation();" />
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section JS
{
    @*<script src="/Content/AutoCompleteJS/chosen.jquery.js" type="text/javascript"></script>*@
    <script src="~/Scripts/bootstrap-datepicker.js"></script>
    <script src="~/Scripts/ProjectJS/Common.js"></script>
    <script src="/Scripts/moment.min.js" type="text/javascript"></script>
    <script src="/Scripts/ProjectJS/ManageMaster_Common.js" type="text/javascript"></script>
    <script src="~/Scripts/ProjectJS/C_ItemJS.js"></script>
    <script src="~/Scripts/ProjectJS/C_AreaJS.js"></script>
    <script src="/Scripts/ProjectJS/ItemGroupJS.js" type="text/javascript"></script>


    <script type="text/javascript">
        var valid = true;
        var elementddlspan = document.createElement("div");
        var elementddlPart = document.createElement("div");
        var numrows = Number('@counter'); // because you are starting with 1 row visible
        var serialnumber = 1;
        var rowsarray = ["0", "0"];
        var modeltoggle = 0;

        $(document).ready(function () {
            $(".chosen-select").chosen();
            $(".nav-tabs a").click(function () {
                $(this).tab('show');
            });

            $('#customer select').remove();
            $('#customer label').remove();
            $('.chosen-select').prop('disabled', 'disabled').trigger("chosen:updated");
            $('.itemchosen-select').prop('disabled', 'disabled').trigger("chosen:updated");
            $('.areachosen-select').prop('disabled', 'disabled').trigger("chosen:updated");
             
            $('#customer .row').remove();
            $('#dealerTbl th:first').remove();
            $('#dealerTbl tbody tr td:first-child').remove();
            $('#customer input[type="button"]').remove();
            $('#customer input[type="checkbox"]').remove();
            $('#customer a').remove();
            $('hr').remove();

            $('#item select').remove();
            $('#item label').remove();
            $('#item input[type="button"]').parent('.row').parent('div').remove();
            $('#ItemList th:first').remove();
            $('#ItemList tbody tr td:first-child').remove();
            $('#item .row').remove();
            $('#item input[type="checkbox"]').remove();
            $('#item input[type="text"]').prop('disabled', 'disabled');
            $('#item a').remove();
            $('#item br').remove();
            //$('br').remove();

            $('#list input[type="checkbox"]').remove();
            $('#list a').remove();
            var date = $('#From_Date').val();
            var todate = $('#To_Date').val();
            debugger;
            $('#From_Date').val(formatDate(date));
            $('#To_Date').val(formatDate(todate));

             if ('@Model.ButtonActionName.ToUpper()' == 'VIEW') {
                DisableAllControl();
            }

            $('#dealerTbl').DataTable();
            $('#ItemList').DataTable();


        });
        function DisableAllControl() {
            $('#SCFormId').find("input, textarea, select").attr("disabled", true);
          //  $('#Approve_Remarks').attr("disabled", true);
            $('.btn').hide();
            $('.fa-trash').hide();
        }

    </script>
}



