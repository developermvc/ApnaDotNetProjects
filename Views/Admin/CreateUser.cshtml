@model LumaxDMS.Models.UserModel
@using LumaxDMS.AppCode
@{
    ViewBag.Title = "CreateUser";
}
@section CSS
{
    <link href="/Content/JsTree/dist/themes/default/style.min.css" rel="stylesheet" type="text/css" />
}
@using (Html.BeginForm("CreateUser", "Admin", FormMethod.Post, new { }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.User_Id)

    <div>
        @Html.Partial("_WaitModal")
        <div class="card card_ps">
            <div class="panel panel-default">
                <div class="header_ps">
                    @if (Model.ActionName == Constants.BTN_CREATE)
                    {
                        <span>CREATE USER</span>
                    }
                    else
                    {
                        <span>UPDATE USER </span>
                    }
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-lg-2">
                            <label for="UserCode" class="redlabel">
                                User Name:
                            </label>
                        </div>
                        <div class="col-lg-2">
                            @Html.TextBoxFor(model => model.UserName, new { @class = "form-control", id = "txtusercode", onblur = "return ValidateUserCodeExist(this)", @Autocomplete = "off" })
                            @Html.ValidationMessageFor(model => model.UserCode)
                        </div>
                        <div class="col-lg-2">
                            <label for="pwd" class="redlabel">
                                User Type:
                            </label>
                        </div>
                        <div class="col-lg-2">
                            @Html.DropDownListFor(m => m.UserType_Id, new SelectList(Model.UserTypeList, "UserType_Id", "UserType_Name"), "--Select--", new { @class = "form-control chosen-select", onChange = "return CheckUserType(this)" })
                            @Html.ValidationMessageFor(m => m.UserType_Id)
                            @Html.Hidden("hdnusertypeid")
                        </div>
                        <div class="col-lg-2">
                            <label for="Dealer_Id" id="Dealer" class="redlabel">
                                Channel Partner:
                            </label>
                            <label for="Emp_Id" id="Emp" class="redlabel">
                                Employee Name:
                            </label>
                        </div>
                        <div class="col-lg-2">
                            @Html.DropDownListFor(m => m.Dealer_Id, new SelectList(Model.DealerList, "Dealer_Id", "DEALERFULLNAME"), "--Select--", new { @class = "form-control chosen-select", onChange = "return CheckExistUser('DEALER');" })
                            @Html.DropDownListFor(m => m.Emp_Id, new SelectList(Model.EmpList, "Emp_Id", "FullName"), "-- Select--", new { @class = "form-control chosen-select", onChange = "return CheckExistUser('EMPLOYEE');" })
                        </div>
                    </div>
                    <div class="row row_pt">
                        <div class="col-lg-2 col-xs-12">
                            <label for="pwd">
                                Status:
                            </label>
                        </div>
                        <div class="col-lg-2 col-xs-12">
                            @Html.CheckBoxFor(model => model.IsActive)
                            @Html.Hidden("hdnleafmenu")
                            @Html.Hidden("hdnmenuper")
                        </div>
                        <div class="col-lg-2">
                            <label for="pwd" class="redlabel">
                                Password:
                            </label>
                        </div>
                        <div class="col-lg-2">
                            @Html.PasswordFor(model => model.Password, new { @class = "form-control", id = "txtuserpassword", @Value = Model.Password })
                            @Html.ValidationMessageFor(model => model.Password)
                        </div>
                        <div class="col-lg-2 col-xs-12">
                            <label for="pwd">
                                Role:
                            </label>
                        </div>
                        <div class="col-lg-2 col-xs-12">
                            @Html.DropDownListFor(model => model.Role_Id, new SelectList(Model.RoleList, "Role_Id", "RoleName"), "--Select--", new { @class = "form-control chosen-select" })
                            @*, onChange = "return GetSelectedMenuPermission(this)"*@
                            @Html.ValidationMessageFor(model => model.Role_Id)
                        </div>
                    </div>
                    <div class="row row_pt">
                        <div class="col-lg-2 col-xs-12">
                            <label for="pwd">
                                Is Block
                            </label>
                        </div>
                        <div class="col-lg-2 col-xs-12">
                            @Html.CheckBoxFor(model => model.IsBlock)
                        </div>
                        <div class="col-lg-2 col-xs-12">
                            <label for="pwd">
                              Block Reason
                            </label>
                        </div>
                        <div class="col-lg-6 col-xs-12">
                            @Html.TextBoxFor(model => model.BlockReason, new { @class = "form-control", id = "txtuserpassword" })
                        </div>
                    </div>
                    <br />
                    <hr />
                    <div class="col-md-12">
                        <div id="divjstree">
                            <!-- in this example the tree is populated from inline HTML -->
                            @Html.Raw(Model.MenuList);
                        </div>
                        <div class="card-footer">
                            <div class="clearfix">
                                <div class="float-right">
                                    @if (Model.ActionName == Constants.BTN_CREATE)
                                    {
                                        <input type="submit" name="btntype" value="Create" id="btnadd" class="btn btn-primary"
                                               onclick="return CheckValidation();" />
                                    }
                                    else if (Model.ActionName == Constants.BTN_EDIT)
                                    {

                                        <input type="submit" class="btn btn-primary" name="btntype" value="Update" id="btnupdate"
                                               onclick="return CheckValidation();" />
                                    }
                                    <input type="button" class="btn btn-primary" name="btntype" value="Clear" id="btnClear"
                                           onclick="return Clear();" />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
@section JS
{
    <script src="/Content/JsTree/dist/jstree.min.js" type="text/javascript"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            debugger;
            if('@Model.ActionName.ToUpper()'=='EDIT')
            {
                $('#txtusercode').attr("disabled", "disabled");
                $('#UserType_Id').attr("disabled", "disabled").trigger('chosen:updated');
                $('#Emp_Id').attr("disabled", "disabled").trigger('chosen:updated');
                $('#Dealer_Id').attr("disabled", "disabled").trigger('chosen:updated');
            }
            $(".chosen-select").chosen();
            CheckUserType();
        });
        $(function () {

            CheckUserType();
            var data = '@Html.Raw(Json.Encode(Model.MenuPermissionList))';
            var jsonObject = $.parseJSON(data);
            if (data != null && data.length > 0) {

                $.each(jsonObject, function (i, n) {
                    debugger;
                    if (n.PERMISSION_ID != null && n.PERMISSION_ID != 0) {
                        $('#divjstree').jstree(true).select_node("per_" + n.MENU_ID + "," + n.PERMISSION_ID);
                    }
                    else {
                        $('#divjstree').jstree(true).select_node("menu_" + n.MENU_ID);
                    }
                });
                //$("#divjstree").trigger("loaded.jstree");

            }
           

            //$('#Emp_Id_chosen').hide();
            //$('#Emp').hide();
            HideWaitingSymbol();
        });
        var menuper = [];
        var leafmenu = [];
        $('#divjstree').on('changed.jstree', function (e, data) {
            debugger;
            var i, j;
            menuper = [];
            leafmenu = [];
            for (i = 0, j = data.selected.length; i < j; i++) {
                var dataobj = data.selected[i];
                if (dataobj.indexOf('_') != -1) {

                    if (dataobj.indexOf(',') != -1) {
                        menuper.push({ Menu_PermissionString: dataobj });
                    } else {
                        leafmenu.push({ LeafMenuString: dataobj });
                    }
                }
            }
        }).jstree({
            "plugins": ["wholerow", "checkbox"]
        });

        var issubmit = false;
        function CheckValidation() {
            var valid = true;
            issubmit = false;
            var UserType_Id = $('#UserType_Id').val();
            var selectedtext = $("#UserType_Id option:selected").text();

            var Dealer_Id = $('#Dealer_Id').val();
            var Emp_Id = $('#Emp_Id').val();
            var roleId = $('#Role_Id').val();
            if (roleId != "") {
                if (ValidateUserCodeExist($('#txtusercode'))) {
                    debugger;
                    if (menuper.length == 0 && roleId == "") {
                        alert("Please select atleast one permission");
                        valid = false;
                    } else if (UserType_Id == "" || UserType_Id == null) {
                        $('#UserType_Id').trigger('chosen:activate');
                        alert("Please select user type");
                        valid = false;
                    } else {
                        if (selectedtext == "DEALER" && (Dealer_Id == "" || Dealer_Id == null)) {
                            $('#Dealer_Id').trigger('chosen:activate');
                            alert("Please select dealer");
                            valid = false;
                        } else if (selectedtext == "EMPLOYEE" && Emp_Id == "" || Emp_Id == null) {
                            $('#Emp_Id').trigger('chosen:activate');
                            alert("Please select employee");
                            valid = false;

                        }


                        else if (selectedtext == "EMPLOYEE" && Emp_Id == "" || Emp_Id == null) {
                            $('#Emp_Id').trigger('chosen:activate');
                            alert("Please select employee");
                            valid = false;

                        }
                    }

                    $('#hdnmenuper').val(JSON.stringify(menuper));
                    $('#hdnleafmenu').val(JSON.stringify(leafmenu));
                }
                return valid;
            }
            else {
                alert("Please select Role");
                valid = false;
                return valid;
            }
        }

        function CheckExistUser(checkfor) {
            debugger;
            var DealerId = $("#Dealer_Id").val()
            if (DealerId == "")
                DealerId = 0;
            var EmpId = $("#Emp_Id").val();
            if (EmpId == "")
                EmpId = 0;
            var UserId = $("#User_Id").val();
            if (UserId == "")
                UserId = 0;
            var valid = true;

            $.ajax({
                type: "POST",
                contentType: "application/json; charset=utf-8",
                url: '@Url.Action("IsDealerEmpExist", "Admin")',
                data: JSON.stringify({ Checkfor: checkfor, empId: EmpId, dealerId: DealerId , userId:UserId}),
                dataType: "json",
                success: function (IsExsist) {
                    if (IsExsist) {
                        var DealerId = $("#Dealer_Id").val()
                        var EmpId = $("#Emp_Id").val();
                        if (DealerId != "") {
                            alert("Login already exists");
                            $('#Dealer_Id').val('');
                            $("#Dealer_Id").val('').trigger("chosen:updated");
                            $('#Dealer_Id').trigger('chosen:activate');
                            valid = false;
                        } else {

                            alert("Login already exists");
                            $('#Emp_Id').val('');
                            $("#Emp_Id").val('').trigger("chosen:updated");
                            $('#Emp_Id').trigger('chosen:activate');
                            valid = false;

                        }


                    }
                    return valid;
                },
                error: function (data) {
                    // throw ex;
                }
            });

        }

        function CheckUserType() {
            debugger;
            var selectedtext = $("#UserType_Id option:selected").text();
            $('#hdnusertypeid').val(selectedtext);
            if (selectedtext == "DEALER") {
                $('#Dealer').show();
                $('#Dealer_Id_chosen').show();
                $('#Emp_Id_chosen').hide();
                $('#Emp').hide();
            }
            else {
                $('#Emp').show();
                $('#Emp_Id_chosen').show();
                $('#Dealer').hide();
                $('#Dealer_Id_chosen').hide();
            }
            debugger;
            if (selectedtext == "--Select--") {
                $('#txtusercode').val('');
            }
        }

        function GetSelectedMenuPermission(element) {
            $('#divjstree').jstree(true).deselect_all();
            $("#divjstree").jstree('close_all');

            var RoleId = $(element).val();
            $.ajax({
                type: "POST",
                contentType: "application/json; charset=utf-8",
                url: '@Url.Action("GetSelectedMenuPermission", "Admin")',
                data: JSON.stringify({ RoleId: RoleId }),
                dataType: "json",
                success: function (data) {

                    //var jsonObject = $.parseJSON(data);
                    if (data.MenuPermissionList != null && data.MenuPermissionList.length > 0) {

                        $.each(data.MenuPermissionList, function (i, n) {
                            debugger;
                            if (n.PERMISSION_ID != null && n.PERMISSION_ID != 0) {
                                $('#divjstree').jstree(true).select_node("per_" + n.MENU_ID + "," + n.PERMISSION_ID);
                            }
                            else {
                                $('#divjstree').jstree(true).select_node("menu_" + n.MENU_ID);
                            }
                        });
                    }

                },
                error: function (data) {
                    // throw ex;
                }

            });


        }


        var isvalidchecked = false;

        function ValidateUserCodeExist(element) {
            debugger;
            var usercode = $(element).val();
            var userid = $('#User_Id').val();
            var valid = true;
            if (usercode != "") {
                $.ajax({
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    url: '@Url.Action("CheckIsUserCodeExist", "Admin")',
                    data: JSON.stringify({ userCode: usercode, userId: userid }),
                    dataType: "json",
                    success: function (data) {
                        if (data == true) {
                            alert("User Name already exists");
                            $('#txtusercode').val('');
                            valid = false;
                        }
                        return valid;
                    },
                    error: function (data) {
                        // throw ex;
                    }

                });
            }
            return valid;
        }

        function Clear()
        {
            $('#txtusercode').attr('value', '');
            $('#UserType_Id').val("").trigger('chosen:updated');
            //$('#UserType_Id option[value=""]').prop('Selected', 'Selected');
            $('#Dealer_Id').val("").trigger('chosen:updated');
            $('#Emp_Id').val("").trigger('chosen:updated');
            //$('#Dealer_Id option[value=""]').prop('Selected', true);
            $('#IsActive').attr('checked', false);
            $('input[type="Password"]').attr('value', '');
            //$('#Role_Id option[value=""]').prop('Selected', true);
            $('#Role_Id').val("").trigger('chosen:updated');
            $('#divjstree').jstree(false).deselect_all();
            $('#divjstree').jstree('close_all');
            $('input[type="Password"]').val('');
            $("#txtuserpassword-error").html('');

            //$('input[type="text"]').attr('value', '');
            //$('#IsActive').attr('checked', false);
            //$('#divjstree').jstree(false).deselect_all();
            //$('#divjstree').jstree('close_all');
        }

         

    </script>
}
